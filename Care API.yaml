openapi: 3.0.3
info:
  title: Care API
  version: 1.0.0
  description: 'Documentation of API endpoints of Care '
paths:
  /api/schema/:
    get:
      operationId: api_schema_retrieve
      description: |-
        OpenApi3 schema for this API. Format can be selected via content negotiation.

        - YAML: application/vnd.oai.openapi
        - JSON: application/vnd.oai.openapi+json
      parameters:
      - in: query
        name: format
        schema:
          type: string
          enum:
          - json
          - yaml
      - in: query
        name: lang
        schema:
          type: string
          enum:
          - en-us
          - hi
          - ml
          - ta
      tags:
      - schema
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      - {}
      responses:
        '200':
          content:
            application/vnd.oai.openapi:
              schema:
                type: object
                additionalProperties: {}
            application/yaml:
              schema:
                type: object
                additionalProperties: {}
            application/vnd.oai.openapi+json:
              schema:
                type: object
                additionalProperties: {}
            application/json:
              schema:
                type: object
                additionalProperties: {}
          description: ''
  /api/v1/auth/login/:
    post:
      operationId: api_v1_auth_login_create
      description: |-
        Generate access and refresh tokens for a user.

        Takes a set of user credentials and returns an access and refresh JSON web
        token pair to prove the authentication of those credentials.
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/v1/auth/logout/:
    post:
      operationId: api_v1_auth_logout_create
      description: Logout a user
      tags:
      - logout
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/auth/token/refresh/:
    post:
      operationId: api_v1_auth_token_refresh_create
      description: |-
        Refresh access token.

        Takes a refresh type JSON web token and returns an access type JSON web
        token if the refresh token is valid.
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/v1/auth/token/verify/:
    post:
      operationId: api_v1_auth_token_verify_create
      description: |-
        Verify tokens are valid.

        Takes a token and returns a boolean of whether it is a valid JSON web token
        for this project.
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/v1/batch_requests/:
    post:
      operationId: api_v1_batch_requests_create
      tags:
      - batch-requests
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/BatchRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/BatchRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/BatchRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '201':
          description: No response body
  /api/v1/encounter/:
    get:
      operationId: api_v1_encounter_list
      parameters:
      - in: query
        name: encounter_class
        schema:
          type: string
      - in: query
        name: external_identifier
        schema:
          type: string
      - in: query
        name: facility
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: live
        schema:
          type: string
      - in: query
        name: location
        schema:
          type: string
          format: uuid
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: phone_number
        schema:
          type: string
      - in: query
        name: priority
        schema:
          type: string
      - in: query
        name: status
        schema:
          type: string
      tags:
      - encounter
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedEncounterListSpecList'
          description: ''
    post:
      operationId: api_v1_encounter_create
      tags:
      - encounter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncounterCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EncounterCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EncounterCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterListSpec'
          description: ''
  /api/v1/encounter/{external_id}/:
    get:
      operationId: api_v1_encounter_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - encounter
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterListSpec'
          description: ''
    put:
      operationId: api_v1_encounter_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - encounter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncounterUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EncounterUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EncounterUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterListSpec'
          description: ''
  /api/v1/encounter/{external_id}/generate_discharge_summary/:
    post:
      operationId: api_v1_encounter_generate_discharge_summary_create
      description: Generate a discharge summary
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - encounter
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                additionalProperties: {}
                description: Unspecified response body
          description: ''
  /api/v1/encounter/{external_id}/organizations/:
    get:
      operationId: api_v1_encounter_organizations_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - encounter
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/encounter/{external_id}/organizations_add/:
    post:
      operationId: api_v1_encounter_organizations_add_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - encounter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncounterOrganizationManageSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EncounterOrganizationManageSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EncounterOrganizationManageSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityOrganizationReadSpec'
          description: ''
  /api/v1/encounter/{external_id}/organizations_remove/:
    delete:
      operationId: api_v1_encounter_organizations_remove_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - encounter
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/encounter/{external_id}/set_care_team_members/:
    post:
      operationId: api_v1_encounter_set_care_team_members_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - encounter
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/EncounterCareTeamMemberWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/EncounterCareTeamMemberWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/EncounterCareTeamMemberWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/EncounterRetrieveSpec'
          description: ''
  /api/v1/facility/:
    get:
      operationId: api_v1_facility_list
      parameters:
      - in: query
        name: facility_type
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: organization
        schema:
          type: string
          format: uuid
      - in: query
        name: phone_number
        schema:
          type: string
      tags:
      - facility
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacilityReadSpecList'
          description: ''
    post:
      operationId: api_v1_facility_create
      tags:
      - facility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityReadSpec'
          description: ''
  /api/v1/facility/{external_id}/:
    get:
      operationId: api_v1_facility_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - facility
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityReadSpec'
          description: ''
    put:
      operationId: api_v1_facility_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - facility
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityReadSpec'
          description: ''
    delete:
      operationId: api_v1_facility_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - facility
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{external_id}/cover_image/:
    post:
      operationId: api_v1_facility_cover_image_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - facility
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_facility_cover_image_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - facility
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/facility/{facility_external_id}/appointments/:
    get:
      operationId: api_v1_facility_appointments_list
      parameters:
      - in: query
        name: date_after
        schema:
          type: string
          format: date
      - in: query
        name: date_before
        schema:
          type: string
          format: date
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: patient
        schema:
          type: string
          format: uuid
      - in: query
        name: slot
        schema:
          type: string
          format: uuid
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      tags:
      - appointments
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedTokenBookingReadSpecList'
          description: ''
  /api/v1/facility/{facility_external_id}/appointments/{external_id}/:
    get:
      operationId: api_v1_facility_appointments_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - appointments
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBookingReadSpec'
          description: ''
    put:
      operationId: api_v1_facility_appointments_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - appointments
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TokenBookingWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TokenBookingWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TokenBookingWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenBookingReadSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/appointments/{external_id}/cancel/:
    post:
      operationId: api_v1_facility_appointments_cancel_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - appointments
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/appointments/{external_id}/reschedule/:
    post:
      operationId: api_v1_facility_appointments_reschedule_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - appointments
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/appointments/available_users/:
    get:
      operationId: api_v1_facility_appointments_available_users_retrieve
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - appointments
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/device/:
    get:
      operationId: api_v1_facility_device_list
      parameters:
      - in: query
        name: care_type
        schema:
          type: string
      - in: query
        name: current_encounter
        schema:
          type: string
          format: uuid
      - in: query
        name: current_location
        schema:
          type: string
          format: uuid
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search_text
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - device
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceListSpecList'
          description: ''
    post:
      operationId: api_v1_facility_device_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/device/{device_external_id}/encounter_history/:
    get:
      operationId: api_v1_facility_device_encounter_history_list
      parameters:
      - in: path
        name: device_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - device_encounter_history
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceEncounterHistoryListSpecList'
          description: ''
  /api/v1/facility/{facility_external_id}/device/{device_external_id}/encounter_history/{external_id}/:
    get:
      operationId: api_v1_facility_device_encounter_history_retrieve
      parameters:
      - in: path
        name: device_external_id
        schema:
          type: string
        required: true
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device_encounter_history
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceEncounterHistoryListSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/device/{device_external_id}/location_history/:
    get:
      operationId: api_v1_facility_device_location_history_list
      parameters:
      - in: path
        name: device_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - device_location_history
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceLocationHistoryListSpecList'
          description: ''
  /api/v1/facility/{facility_external_id}/device/{device_external_id}/location_history/{external_id}/:
    get:
      operationId: api_v1_facility_device_location_history_retrieve
      parameters:
      - in: path
        name: device_external_id
        schema:
          type: string
        required: true
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device_location_history
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceLocationHistoryListSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/device/{device_external_id}/service_history/:
    get:
      operationId: api_v1_facility_device_service_history_list
      parameters:
      - in: path
        name: device_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - device_service_history
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedDeviceServiceHistoryListSpecList'
          description: ''
    post:
      operationId: api_v1_facility_device_service_history_create
      parameters:
      - in: path
        name: device_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device_service_history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceServiceHistoryWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceServiceHistoryWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceServiceHistoryWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceHistoryListSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/device/{device_external_id}/service_history/{external_id}/:
    get:
      operationId: api_v1_facility_device_service_history_retrieve
      parameters:
      - in: path
        name: device_external_id
        schema:
          type: string
        required: true
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device_service_history
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceHistoryListSpec'
          description: ''
    put:
      operationId: api_v1_facility_device_service_history_update
      parameters:
      - in: path
        name: device_external_id
        schema:
          type: string
        required: true
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device_service_history
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceServiceHistoryWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceServiceHistoryWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceServiceHistoryWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceServiceHistoryListSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/device/{external_id}/:
    get:
      operationId: api_v1_facility_device_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListSpec'
          description: ''
    put:
      operationId: api_v1_facility_device_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/DeviceUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/DeviceUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/DeviceUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/DeviceListSpec'
          description: ''
    delete:
      operationId: api_v1_facility_device_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{facility_external_id}/device/{external_id}/add_managing_organization/:
    post:
      operationId: api_v1_facility_device_add_managing_organization_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/device/{external_id}/associate_encounter/:
    post:
      operationId: api_v1_facility_device_associate_encounter_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/device/{external_id}/associate_location/:
    post:
      operationId: api_v1_facility_device_associate_location_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/device/{external_id}/remove_managing_organization/:
    post:
      operationId: api_v1_facility_device_remove_managing_organization_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/device/upsert/:
    post:
      operationId: api_v1_facility_device_upsert_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - device
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/location/:
    get:
      operationId: api_v1_facility_location_list
      parameters:
      - in: query
        name: available
        schema:
          type: boolean
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: query
        name: form
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: mode
        schema:
          type: string
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: operational_status
        schema:
          type: string
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      - in: query
        name: status
        schema:
          type: string
      tags:
      - location
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacilityLocationListSpecList'
          description: ''
    post:
      operationId: api_v1_facility_location_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityLocationWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityLocationWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityLocationWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityLocationListSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/location/{external_id}/:
    get:
      operationId: api_v1_facility_location_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityLocationListSpec'
          description: ''
    put:
      operationId: api_v1_facility_location_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityLocationUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityLocationUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityLocationUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityLocationListSpec'
          description: ''
    delete:
      operationId: api_v1_facility_location_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{facility_external_id}/location/{external_id}/associate_encounter/:
    post:
      operationId: api_v1_facility_location_associate_encounter_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterAssignSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterAssignSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterAssignSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/location/{external_id}/organizations/:
    get:
      operationId: api_v1_facility_location_organizations_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/location/{external_id}/organizations_add/:
    post:
      operationId: api_v1_facility_location_organizations_add_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityLocationOrganizationManageSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityLocationOrganizationManageSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityLocationOrganizationManageSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityOrganizationReadSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/location/{external_id}/organizations_remove/:
    post:
      operationId: api_v1_facility_location_organizations_remove_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityLocationOrganizationManageSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityLocationOrganizationManageSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityLocationOrganizationManageSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/location/{location_external_id}/association/:
    get:
      operationId: api_v1_facility_location_association_list
      parameters:
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: path
        name: location_external_id
        schema:
          type: string
        required: true
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - association
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacilityLocationEncounterReadSpecList'
          description: ''
    post:
      operationId: api_v1_facility_location_association_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: location_external_id
        schema:
          type: string
        required: true
      tags:
      - association
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityLocationEncounterReadSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/location/{location_external_id}/association/{external_id}/:
    get:
      operationId: api_v1_facility_location_association_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: location_external_id
        schema:
          type: string
        required: true
      tags:
      - association
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityLocationEncounterReadSpec'
          description: ''
    put:
      operationId: api_v1_facility_location_association_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: location_external_id
        schema:
          type: string
        required: true
      tags:
      - association
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityLocationEncounterUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityLocationEncounterReadSpec'
          description: ''
    delete:
      operationId: api_v1_facility_location_association_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: location_external_id
        schema:
          type: string
        required: true
      tags:
      - association
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{facility_external_id}/location/{location_external_id}/association/upsert/:
    post:
      operationId: api_v1_facility_location_association_upsert_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: location_external_id
        schema:
          type: string
        required: true
      tags:
      - association
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/location/upsert/:
    post:
      operationId: api_v1_facility_location_upsert_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - location
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/organizations/:
    get:
      operationId: api_v1_facility_organizations_list
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: org_type
        schema:
          type: string
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      tags:
      - facility-organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacilityOrganizationReadSpecList'
          description: ''
    post:
      operationId: api_v1_facility_organizations_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityOrganizationReadSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/organizations/{external_id}/:
    get:
      operationId: api_v1_facility_organizations_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityOrganizationReadSpec'
          description: ''
    put:
      operationId: api_v1_facility_organizations_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityOrganizationReadSpec'
          description: ''
    delete:
      operationId: api_v1_facility_organizations_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{facility_external_id}/organizations/{facility_organizations_external_id}/users/:
    get:
      operationId: api_v1_facility_organizations_users_list
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_organizations_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search_text
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - facility-organization-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacilityOrganizationUserReadSpecList'
          description: ''
    post:
      operationId: api_v1_facility_organizations_users_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_organizations_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationUserWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationUserWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationUserWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityOrganizationUserReadSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/organizations/{facility_organizations_external_id}/users/{external_id}/:
    get:
      operationId: api_v1_facility_organizations_users_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_organizations_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityOrganizationUserReadSpec'
          description: ''
    put:
      operationId: api_v1_facility_organizations_users_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_organizations_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationUserUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationUserUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FacilityOrganizationUserUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityOrganizationUserReadSpec'
          description: ''
    delete:
      operationId: api_v1_facility_organizations_users_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_organizations_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{facility_external_id}/organizations/{facility_organizations_external_id}/users/upsert/:
    post:
      operationId: api_v1_facility_organizations_users_upsert_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: facility_organizations_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/organizations/mine/:
    get:
      operationId: api_v1_facility_organizations_mine_retrieve
      description: Get organizations that are directly attached to the given user
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/organizations/upsert/:
    post:
      operationId: api_v1_facility_organizations_upsert_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/schedulable_users/:
    get:
      operationId: api_v1_facility_schedulable_users_list
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - facility-schedulable-users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPublicUserReadSpecList'
          description: ''
  /api/v1/facility/{facility_external_id}/schedulable_users/{external_id}/:
    get:
      operationId: api_v1_facility_schedulable_users_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-schedulable-users
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PublicUserReadSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/schedule/:
    get:
      operationId: api_v1_facility_schedule_list
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      - in: query
        name: valid_from
        schema:
          type: string
          format: date-time
      - in: query
        name: valid_to
        schema:
          type: string
          format: date-time
      tags:
      - schedule
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedScheduleReadSpecList'
          description: ''
    post:
      operationId: api_v1_facility_schedule_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduleCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduleCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleReadSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/schedule/{external_id}/:
    get:
      operationId: api_v1_facility_schedule_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleReadSpec'
          description: ''
    put:
      operationId: api_v1_facility_schedule_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ScheduleUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ScheduleUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ScheduleUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ScheduleReadSpec'
          description: ''
    delete:
      operationId: api_v1_facility_schedule_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{facility_external_id}/schedule/{schedule_external_id}/availability/:
    post:
      operationId: api_v1_facility_schedule_availability_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: schedule_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule-availability
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityCreateSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/schedule/{schedule_external_id}/availability/{external_id}/:
    delete:
      operationId: api_v1_facility_schedule_availability_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - in: path
        name: schedule_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule-availability
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{facility_external_id}/schedule/upsert/:
    post:
      operationId: api_v1_facility_schedule_upsert_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/schedule_exceptions/:
    get:
      operationId: api_v1_facility_schedule_exceptions_list
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: user
        schema:
          type: string
          format: uuid
      - in: query
        name: valid_from
        schema:
          type: string
          format: date
      - in: query
        name: valid_to
        schema:
          type: string
          format: date
      tags:
      - schedule-exceptions
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAvailabilityExceptionReadSpecList'
          description: ''
    post:
      operationId: api_v1_facility_schedule_exceptions_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule-exceptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityExceptionWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityExceptionWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityExceptionWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityExceptionReadSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/schedule_exceptions/{external_id}/:
    get:
      operationId: api_v1_facility_schedule_exceptions_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule-exceptions
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityExceptionReadSpec'
          description: ''
    put:
      operationId: api_v1_facility_schedule_exceptions_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule-exceptions
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AvailabilityExceptionWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AvailabilityExceptionWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AvailabilityExceptionWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AvailabilityExceptionReadSpec'
          description: ''
    delete:
      operationId: api_v1_facility_schedule_exceptions_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule-exceptions
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/facility/{facility_external_id}/schedule_exceptions/upsert/:
    post:
      operationId: api_v1_facility_schedule_exceptions_upsert_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - schedule-exceptions
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/slots/{external_id}/:
    get:
      operationId: api_v1_facility_slots_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - slot
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenSlotBaseSpec'
          description: ''
  /api/v1/facility/{facility_external_id}/slots/{external_id}/create_appointment/:
    post:
      operationId: api_v1_facility_slots_create_appointment_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - slot
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/slots/availability_stats/:
    post:
      operationId: api_v1_facility_slots_availability_stats_create
      description: |-
        Return the stats for available slots compared to the booked slots
        ie Availability percentage.
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - slot
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/slots/get_slots_for_day/:
    post:
      operationId: api_v1_facility_slots_get_slots_for_day_create
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - slot
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/facility/{facility_external_id}/users/:
    get:
      operationId: api_v1_facility_users_list
      parameters:
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: search_text
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: username
        schema:
          type: string
      tags:
      - facility-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSpecList'
          description: ''
  /api/v1/facility/{facility_external_id}/users/{external_id}/:
    get:
      operationId: api_v1_facility_users_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: facility_external_id
        schema:
          type: string
        required: true
      tags:
      - facility-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSpec'
          description: ''
  /api/v1/facility/upsert/:
    post:
      operationId: api_v1_facility_upsert_create
      tags:
      - facility
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/files/:
    get:
      operationId: api_v1_files_list
      parameters:
      - in: query
        name: file_category
        schema:
          type: string
      - in: query
        name: is_archived
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      tags:
      - files
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFileUploadListSpecList'
          description: ''
    post:
      operationId: api_v1_files_create
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUploadCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileUploadCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadListSpec'
          description: ''
  /api/v1/files/{external_id}/:
    get:
      operationId: api_v1_files_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - files
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadListSpec'
          description: ''
    put:
      operationId: api_v1_files_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/FileUploadUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/FileUploadUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/FileUploadUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadListSpec'
          description: ''
  /api/v1/files/{external_id}/archive/:
    post:
      operationId: api_v1_files_archive_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - files
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ArchiveRequestSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ArchiveRequestSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ArchiveRequestSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadListSpec'
          description: ''
  /api/v1/files/{external_id}/mark_upload_completed/:
    post:
      operationId: api_v1_files_mark_upload_completed_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - files
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FileUploadListSpec'
          description: ''
  /api/v1/files/upload-file/:
    post:
      operationId: api_v1_files_upload_file_create
      tags:
      - files
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/getallfacilities/:
    get:
      operationId: api_v1_getallfacilities_list
      parameters:
      - in: query
        name: facility_type
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: organization
        schema:
          type: string
          format: uuid
      - in: query
        name: phone_number
        schema:
          type: string
      - name: search_text
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      tags:
      - getallfacilities
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedFacilityReadSpecList'
          description: ''
  /api/v1/getallfacilities/{external_id}/:
    get:
      operationId: api_v1_getallfacilities_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - getallfacilities
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/FacilityReadSpec'
          description: ''
  /api/v1/govt/organization/:
    get:
      operationId: api_v1_govt_organization_list
      parameters:
      - in: query
        name: level_cache
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: org_type
        schema:
          type: string
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      tags:
      - govt-organization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationReadSpecList'
          description: ''
  /api/v1/govt/organization/{external_id}/:
    get:
      operationId: api_v1_govt_organization_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - govt-organization
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationReadSpec'
          description: ''
  /api/v1/meta_artifacts/:
    get:
      operationId: api_v1_meta_artifacts_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - in: query
        name: object_type
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - meta_artifacts
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMetaArtifactReadSpecList'
          description: ''
    post:
      operationId: api_v1_meta_artifacts_create
      tags:
      - meta_artifacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaArtifactCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MetaArtifactCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetaArtifactCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaArtifactReadSpec'
          description: ''
  /api/v1/meta_artifacts/{external_id}/:
    get:
      operationId: api_v1_meta_artifacts_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - meta_artifacts
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaArtifactReadSpec'
          description: ''
    put:
      operationId: api_v1_meta_artifacts_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - meta_artifacts
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MetaArtifactUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MetaArtifactUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MetaArtifactUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MetaArtifactReadSpec'
          description: ''
  /api/v1/meta_artifacts/upsert/:
    post:
      operationId: api_v1_meta_artifacts_upsert_create
      tags:
      - meta_artifacts
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/mfa/login/:
    post:
      operationId: api_v1_mfa_login_create
      description: Unified MFA login endpoint supporting TOTP and backup codes
      tags:
      - mfa
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MFALoginRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MFALoginRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MFALoginRequest'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MFALoginResponse'
          description: ''
  /api/v1/mfa/totp/disable/:
    post:
      operationId: api_v1_mfa_totp_disable_create
      description: Disable TOTP-based two-factor authentication
      tags:
      - mfa-totp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordVerifyRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/v1/mfa/totp/regenerate_backup_codes/:
    post:
      operationId: api_v1_mfa_totp_regenerate_backup_codes_create
      description: Regenerate TOTP backup codes
      tags:
      - mfa-totp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PasswordVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PasswordVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PasswordVerifyRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                type: object
                properties:
                  backup_codes:
                    type: array
                    items:
                      type: string
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/v1/mfa/totp/setup/:
    post:
      operationId: api_v1_mfa_totp_setup_create
      description: Initialize TOTP setup for user
      tags:
      - mfa-totp
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPSetupResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/v1/mfa/totp/verify/:
    post:
      operationId: api_v1_mfa_totp_verify_create
      description: Verify TOTP code and enable 2FA
      tags:
      - mfa-totp
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/TOTPVerifyRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/TOTPVerifyRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/TOTPVerifyRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TOTPVerifyResponse'
          description: ''
        '400':
          content:
            application/json:
              schema:
                type: object
                properties:
                  error:
                    type: string
          description: ''
  /api/v1/organization/:
    get:
      operationId: api_v1_organization_list
      parameters:
      - in: query
        name: level_cache
        schema:
          type: integer
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: org_type
        schema:
          type: string
      - in: query
        name: parent
        schema:
          type: string
          format: uuid
      tags:
      - organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationReadSpecList'
          description: ''
    post:
      operationId: api_v1_organization_create
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationReadSpec'
          description: ''
  /api/v1/organization/{external_id}/:
    get:
      operationId: api_v1_organization_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationReadSpec'
          description: ''
    put:
      operationId: api_v1_organization_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organization
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationReadSpec'
          description: ''
    delete:
      operationId: api_v1_organization_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/organization/{organization_external_id}/users/:
    get:
      operationId: api_v1_organization_users_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: organization_external_id
        schema:
          type: string
        required: true
      - in: query
        name: phone_number
        schema:
          type: string
      - in: query
        name: username
        schema:
          type: string
      tags:
      - organization-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedOrganizationUserReadSpecList'
          description: ''
    post:
      operationId: api_v1_organization_users_create
      parameters:
      - in: path
        name: organization_external_id
        schema:
          type: string
        required: true
      tags:
      - organization-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUserWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUserWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserReadSpec'
          description: ''
  /api/v1/organization/{organization_external_id}/users/{external_id}/:
    get:
      operationId: api_v1_organization_users_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: organization_external_id
        schema:
          type: string
        required: true
      tags:
      - organization-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserReadSpec'
          description: ''
    put:
      operationId: api_v1_organization_users_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: organization_external_id
        schema:
          type: string
        required: true
      tags:
      - organization-users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OrganizationUserUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OrganizationUserUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OrganizationUserUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/OrganizationUserReadSpec'
          description: ''
    delete:
      operationId: api_v1_organization_users_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: organization_external_id
        schema:
          type: string
        required: true
      tags:
      - organization-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/organization/{organization_external_id}/users/upsert/:
    post:
      operationId: api_v1_organization_users_upsert_create
      parameters:
      - in: path
        name: organization_external_id
        schema:
          type: string
        required: true
      tags:
      - organization-users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/organization/mine/:
    get:
      operationId: api_v1_organization_mine_retrieve
      description: Get organizations that are directly attached to the given user
      tags:
      - organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/organization/upsert/:
    post:
      operationId: api_v1_organization_upsert_create
      tags:
      - organization
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/otp/login/:
    post:
      operationId: api_v1_otp_login_create
      tags:
      - otp-login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPLoginSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPLoginSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPLoginSpec'
        required: true
      responses:
        '200':
          description: No response body
  /api/v1/otp/patient/:
    get:
      operationId: api_v1_otp_patient_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - otp-patient
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientOTPReadSpecList'
          description: ''
    post:
      operationId: api_v1_otp_patient_create
      tags:
      - otp-patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientOTPWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientOTPWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientOTPWriteSpec'
        required: true
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientOTPReadSpec'
          description: ''
  /api/v1/otp/send/:
    post:
      operationId: api_v1_otp_send_create
      tags:
      - otp-login
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/OTPLoginRequestSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/OTPLoginRequestSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/OTPLoginRequestSpec'
        required: true
      responses:
        '200':
          description: No response body
  /api/v1/otp/slots/{external_id}/:
    get:
      operationId: api_v1_otp_slots_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - otp-slots
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TokenSlotBaseSpec'
          description: ''
  /api/v1/otp/slots/{external_id}/create_appointment/:
    post:
      operationId: api_v1_otp_slots_create_appointment_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - otp-slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AppointmentBookingSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AppointmentBookingSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AppointmentBookingSpec'
        required: true
      responses:
        '200':
          description: No response body
  /api/v1/otp/slots/cancel_appointment/:
    post:
      operationId: api_v1_otp_slots_cancel_appointment_create
      tags:
      - otp-slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/CancelAppointmentSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/CancelAppointmentSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/CancelAppointmentSpec'
        required: true
      responses:
        '200':
          description: No response body
  /api/v1/otp/slots/get_appointments/:
    get:
      operationId: api_v1_otp_slots_get_appointments_retrieve
      tags:
      - otp-slots
      responses:
        '200':
          description: No response body
  /api/v1/otp/slots/get_slots_for_day/:
    post:
      operationId: api_v1_otp_slots_get_slots_for_day_create
      tags:
      - otp-slots
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SlotsForDayRequestSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SlotsForDayRequestSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SlotsForDayRequestSpec'
        required: true
      responses:
        '200':
          description: No response body
  /api/v1/password_change/:
    put:
      operationId: api_v1_password_change_update
      description: An endpoint for changing password.
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_password_change_partial_update
      description: An endpoint for changing password.
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/password_reset/:
    post:
      operationId: api_v1_password_reset_create
      description: |-
        An Api View which provides a method to request a password reset token based on an e-mail address

        Sends a signal reset_password_token_created when a reset token was created
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/v1/password_reset/check/:
    post:
      operationId: api_v1_password_reset_check_create
      description: An Api View which provides a method to check if a password reset
        token is valid
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/v1/password_reset/confirm/:
    post:
      operationId: api_v1_password_reset_confirm_create
      description: An Api View which provides a method to reset a password based on
        a unique token
      tags:
      - auth
      responses:
        '200':
          description: No response body
  /api/v1/patient/:
    get:
      operationId: api_v1_patient_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: phone_number
        schema:
          type: string
      tags:
      - patient
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPatientListSpecList'
          description: ''
    post:
      operationId: api_v1_patient_create
      tags:
      - patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientListSpec'
          description: ''
  /api/v1/patient/{external_id}/:
    get:
      operationId: api_v1_patient_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - patient
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientListSpec'
          description: ''
    put:
      operationId: api_v1_patient_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientUpdateSpec'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientListSpec'
          description: ''
    delete:
      operationId: api_v1_patient_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - patient
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/patient/{external_id}/add_user/:
    post:
      operationId: api_v1_patient_add_user_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientUserCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientUserCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientUserCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSpec'
          description: ''
  /api/v1/patient/{external_id}/delete_user/:
    post:
      operationId: api_v1_patient_delete_user_create
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/PatientUserDeleteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/PatientUserDeleteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/PatientUserDeleteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{external_id}/get_appointments/:
    get:
      operationId: api_v1_patient_get_appointments_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - patient
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{external_id}/get_users/:
    get:
      operationId: api_v1_patient_get_users_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - patient
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/allergy_intolerance/:
    get:
      operationId: api_v1_patient_allergy_intolerance_list
      parameters:
      - in: query
        name: clinical_status
        schema:
          type: string
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: query
        name: verification_status
        schema:
          type: string
      tags:
      - allergy-intolerance
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedAllergyIntoleranceReadSpecList'
          description: ''
    post:
      operationId: api_v1_patient_allergy_intolerance_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - allergy-intolerance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllergyIntoleranceWriteSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllergyIntoleranceWriteSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllergyIntoleranceWriteSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntoleranceReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/allergy_intolerance/{external_id}/:
    get:
      operationId: api_v1_patient_allergy_intolerance_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - allergy-intolerance
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntoleranceReadSpec'
          description: ''
    put:
      operationId: api_v1_patient_allergy_intolerance_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - allergy-intolerance
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AllergyIntoleranceUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/AllergyIntoleranceUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/AllergyIntoleranceUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/AllergyIntoleranceReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/allergy_intolerance/upsert/:
    post:
      operationId: api_v1_patient_allergy_intolerance_upsert_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - allergy-intolerance
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/consent/:
    get:
      operationId: api_v1_patient_consent_list
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - consent
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConsentListSpecList'
          description: ''
    post:
      operationId: api_v1_patient_consent_create
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - consent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsentCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsentCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentListSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/consent/{external_id}/:
    get:
      operationId: api_v1_patient_consent_retrieve
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - consent
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentListSpec'
          description: ''
    put:
      operationId: api_v1_patient_consent_update
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - consent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsentUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsentUpdateSpec'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConsentListSpec'
          description: ''
    delete:
      operationId: api_v1_patient_consent_destroy
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - consent
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/patient/{patient_external_id}/consent/{external_id}/add_verification/:
    post:
      operationId: api_v1_patient_consent_add_verification_create
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - consent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConsentVerificationSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConsentVerificationSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConsentVerificationSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/consent/{external_id}/remove_verification/:
    post:
      operationId: api_v1_patient_consent_remove_verification_create
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - consent
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/VerificationRemovalSchema'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/VerificationRemovalSchema'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/VerificationRemovalSchema'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/consent/upsert/:
    post:
      operationId: api_v1_patient_consent_upsert_create
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - consent
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/diagnosis/:
    get:
      operationId: api_v1_patient_diagnosis_list
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: query
        name: category
        schema:
          type: string
          nullable: true
      - in: query
        name: clinical_status
        schema:
          type: string
          nullable: true
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - in: query
        name: exclude_clinical_status
        schema:
          type: string
          nullable: true
      - in: query
        name: exclude_verification_status
        schema:
          type: string
          nullable: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: query
        name: severity
        schema:
          type: string
      - in: query
        name: verification_status
        schema:
          type: string
          nullable: true
      tags:
      - diagnosis
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConditionReadSpecList'
          description: ''
    post:
      operationId: api_v1_patient_diagnosis_create
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - diagnosis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/diagnosis/{external_id}/:
    get:
      operationId: api_v1_patient_diagnosis_retrieve
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - diagnosis
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionReadSpec'
          description: ''
    put:
      operationId: api_v1_patient_diagnosis_update
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - diagnosis
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionReadSpec'
          description: ''
    delete:
      operationId: api_v1_patient_diagnosis_destroy
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - diagnosis
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/patient/{patient_external_id}/diagnosis/upsert/:
    post:
      operationId: api_v1_patient_diagnosis_upsert_create
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - diagnosis
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/medication/administration/:
    get:
      operationId: api_v1_patient_medication_administration_list
      parameters:
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: occurrence_period_end_after
        schema:
          type: string
          format: date-time
      - in: query
        name: occurrence_period_end_before
        schema:
          type: string
          format: date-time
      - in: query
        name: occurrence_period_start_after
        schema:
          type: string
          format: date-time
      - in: query
        name: occurrence_period_start_before
        schema:
          type: string
          format: date-time
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: query
        name: request
        schema:
          type: string
          format: uuid
      - in: query
        name: status
        schema:
          type: string
      tags:
      - medication-administration
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicationAdministrationReadSpecList'
          description: ''
    post:
      operationId: api_v1_patient_medication_administration_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-administration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationAdministrationSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationAdministrationSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationAdministrationSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationAdministrationReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/medication/administration/{external_id}/:
    get:
      operationId: api_v1_patient_medication_administration_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-administration
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationAdministrationReadSpec'
          description: ''
    put:
      operationId: api_v1_patient_medication_administration_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-administration
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationAdministrationUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationAdministrationUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationAdministrationUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationAdministrationReadSpec'
          description: ''
    delete:
      operationId: api_v1_patient_medication_administration_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-administration
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/patient/{patient_external_id}/medication/administration/upsert/:
    post:
      operationId: api_v1_patient_medication_administration_upsert_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-administration
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/medication/request/:
    get:
      operationId: api_v1_patient_medication_request_list
      parameters:
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: query
        name: status
        schema:
          type: string
      tags:
      - medication-request
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicationRequestReadSpecList'
          description: ''
    post:
      operationId: api_v1_patient_medication_request_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationRequestSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationRequestSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationRequestSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationRequestReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/medication/request/{external_id}/:
    get:
      operationId: api_v1_patient_medication_request_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-request
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationRequestReadSpec'
          description: ''
    put:
      operationId: api_v1_patient_medication_request_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationRequestUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationRequestUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationRequestUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationRequestReadSpec'
          description: ''
    delete:
      operationId: api_v1_patient_medication_request_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-request
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/patient/{patient_external_id}/medication/request/upsert/:
    post:
      operationId: api_v1_patient_medication_request_upsert_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-request
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/medication/statement/:
    get:
      operationId: api_v1_patient_medication_statement_list
      parameters:
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: query
        name: status
        schema:
          type: string
      tags:
      - medication-statement
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedMedicationStatementReadSpecList'
          description: ''
    post:
      operationId: api_v1_patient_medication_statement_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-statement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationStatementSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationStatementSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationStatementSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationStatementReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/medication/statement/{external_id}/:
    get:
      operationId: api_v1_patient_medication_statement_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-statement
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationStatementReadSpec'
          description: ''
    put:
      operationId: api_v1_patient_medication_statement_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-statement
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MedicationStatementUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MedicationStatementUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MedicationStatementUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/MedicationStatementReadSpec'
          description: ''
    delete:
      operationId: api_v1_patient_medication_statement_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-statement
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/patient/{patient_external_id}/medication/statement/upsert/:
    post:
      operationId: api_v1_patient_medication_statement_upsert_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - medication-statement
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/observation/:
    get:
      operationId: api_v1_patient_observation_list
      parameters:
      - in: query
        name: codes
        schema:
          type: string
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - in: query
        name: ignore_group
        schema:
          type: boolean
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - observation
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedObservationReadSpecList'
          description: ''
  /api/v1/patient/{patient_external_id}/observation/{external_id}/:
    get:
      operationId: api_v1_patient_observation_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - observation
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ObservationReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/observation/analyse/:
    post:
      operationId: api_v1_patient_observation_analyse_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - observation
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ObservationAnalyseRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ObservationAnalyseRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ObservationAnalyseRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/questionnaire_response/:
    get:
      operationId: api_v1_patient_questionnaire_response_list
      parameters:
      - in: query
        name: encounter
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: query
        name: questionnaire
        schema:
          type: string
          format: uuid
      - in: query
        name: questionnaire_slug
        schema:
          type: string
      - in: query
        name: subject_type
        schema:
          type: string
      tags:
      - questionnaire-response
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionnaireResponseReadSpecList'
          description: ''
  /api/v1/patient/{patient_external_id}/questionnaire_response/{external_id}/:
    get:
      operationId: api_v1_patient_questionnaire_response_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - questionnaire-response
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponseReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/symptom/:
    get:
      operationId: api_v1_patient_symptom_list
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: query
        name: category
        schema:
          type: string
          nullable: true
      - in: query
        name: clinical_status
        schema:
          type: string
          nullable: true
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - in: query
        name: exclude_clinical_status
        schema:
          type: string
          nullable: true
      - in: query
        name: exclude_verification_status
        schema:
          type: string
          nullable: true
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - name: ordering
        required: false
        in: query
        description: Which field to use when ordering the results.
        schema:
          type: string
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: query
        name: severity
        schema:
          type: string
      - in: query
        name: verification_status
        schema:
          type: string
          nullable: true
      tags:
      - symptom
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedConditionReadSpecList'
          description: ''
    post:
      operationId: api_v1_patient_symptom_create
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - symptom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/symptom/{external_id}/:
    get:
      operationId: api_v1_patient_symptom_retrieve
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - symptom
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionReadSpec'
          description: ''
    put:
      operationId: api_v1_patient_symptom_update
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - symptom
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ConditionUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ConditionUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ConditionUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ConditionReadSpec'
          description: ''
    delete:
      operationId: api_v1_patient_symptom_destroy
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - symptom
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/patient/{patient_external_id}/symptom/upsert/:
    post:
      operationId: api_v1_patient_symptom_upsert_create
      description: Mixin to validate encounter and its relationship with the patient.
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - symptom
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/{patient_external_id}/thread/:
    get:
      operationId: api_v1_patient_thread_list
      parameters:
      - in: query
        name: encounter
        schema:
          type: string
          format: uuid
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - thread
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteThreadUpdateSpecList'
          description: ''
    post:
      operationId: api_v1_patient_thread_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - thread
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteThreadCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteThreadCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteThreadCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteThreadUpdateSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/thread/{external_id}/:
    get:
      operationId: api_v1_patient_thread_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - thread
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteThreadUpdateSpec'
          description: ''
    put:
      operationId: api_v1_patient_thread_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      tags:
      - thread
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteThreadReadSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteThreadReadSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteThreadReadSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteThreadUpdateSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/thread/{thread_external_id}/note/:
    get:
      operationId: api_v1_patient_thread_note_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: path
        name: thread_external_id
        schema:
          type: string
        required: true
      tags:
      - note
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedNoteMessageReadSpecList'
          description: ''
    post:
      operationId: api_v1_patient_thread_note_create
      parameters:
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: path
        name: thread_external_id
        schema:
          type: string
        required: true
      tags:
      - note
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteMessageCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteMessageCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteMessageCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteMessageReadSpec'
          description: ''
  /api/v1/patient/{patient_external_id}/thread/{thread_external_id}/note/{external_id}/:
    get:
      operationId: api_v1_patient_thread_note_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: path
        name: thread_external_id
        schema:
          type: string
        required: true
      tags:
      - note
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteMessageReadSpec'
          description: ''
    put:
      operationId: api_v1_patient_thread_note_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: patient_external_id
        schema:
          type: string
        required: true
      - in: path
        name: thread_external_id
        schema:
          type: string
        required: true
      tags:
      - note
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NoteMessageUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/NoteMessageUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/NoteMessageUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/NoteMessageReadSpec'
          description: ''
  /api/v1/patient/search/:
    post:
      operationId: api_v1_patient_search_create
      tags:
      - patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRequestSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SearchRequestSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SearchRequestSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/patient/search_retrieve/:
    post:
      operationId: api_v1_patient_search_retrieve_create
      tags:
      - patient
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/SearchRetrieveRequestSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/SearchRetrieveRequestSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/SearchRetrieveRequestSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PatientRetrieveSpec'
          description: ''
  /api/v1/patient/upsert/:
    post:
      operationId: api_v1_patient_upsert_create
      tags:
      - patient
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/permission/:
    get:
      operationId: api_v1_permission_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - permission
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedPermissionSpecList'
          description: ''
  /api/v1/permission/{slug}/:
    get:
      operationId: api_v1_permission_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - permission
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PermissionSpec'
          description: ''
  /api/v1/questionnaire/:
    get:
      operationId: api_v1_questionnaire_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: subject_type
        schema:
          type: string
      - in: query
        name: tag_slug
        schema:
          type: string
      - in: query
        name: title
        schema:
          type: string
      tags:
      - questionnaire
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionnaireReadSpecList'
          description: ''
    post:
      operationId: api_v1_questionnaire_create
      tags:
      - questionnaire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionnaireSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionnaireSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireReadSpec'
          description: ''
  /api/v1/questionnaire/{slug}/:
    get:
      operationId: api_v1_questionnaire_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireReadSpec'
          description: ''
    put:
      operationId: api_v1_questionnaire_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionnaireUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionnaireUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireReadSpec'
          description: ''
    delete:
      operationId: api_v1_questionnaire_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/questionnaire/{slug}/get_organizations/:
    get:
      operationId: api_v1_questionnaire_get_organizations_retrieve
      description: Get all External Organizations connected to this Questionnaire
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/questionnaire/{slug}/set_organizations/:
    post:
      operationId: api_v1_questionnaire_set_organizations_create
      description: Bulk Update all External Organizations connected to this Questionnaire
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireOrganizationUpdateSchema'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionnaireOrganizationUpdateSchema'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionnaireOrganizationUpdateSchema'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/questionnaire/{slug}/set_tags/:
    post:
      operationId: api_v1_questionnaire_set_tags_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagsSetSchema'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagsSetSchema'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagsSetSchema'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/questionnaire/{slug}/submit/:
    post:
      operationId: api_v1_questionnaire_submit_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireSubmitRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionnaireSubmitRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionnaireSubmitRequest'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireResponseReadSpec'
          description: ''
  /api/v1/questionnaire/upsert/:
    post:
      operationId: api_v1_questionnaire_upsert_create
      tags:
      - questionnaire
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/questionnaire_tag/:
    get:
      operationId: api_v1_questionnaire_tag_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: slug
        schema:
          type: string
      tags:
      - questionnaire_tags
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedQuestionnaireTagSpecList'
          description: ''
    post:
      operationId: api_v1_questionnaire_tag_create
      tags:
      - questionnaire_tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireTagSpec'
          description: ''
  /api/v1/questionnaire_tag/{slug}/:
    get:
      operationId: api_v1_questionnaire_tag_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire_tags
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireTagSpec'
          description: ''
    put:
      operationId: api_v1_questionnaire_tag_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire_tags
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/QuestionnaireTagSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/QuestionnaireTagSpec'
          description: ''
    delete:
      operationId: api_v1_questionnaire_tag_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - questionnaire_tags
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/questionnaire_tag/upsert/:
    post:
      operationId: api_v1_questionnaire_tag_upsert_create
      tags:
      - questionnaire_tags
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/resource/:
    get:
      operationId: api_v1_resource_list
      parameters:
      - in: query
        name: approving_facility
        schema:
          type: string
          format: uuid
      - in: query
        name: assigned_facility
        schema:
          type: string
          format: uuid
      - in: query
        name: category
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: origin_facility
        schema:
          type: string
          format: uuid
      - in: query
        name: related_patient
        schema:
          type: string
          format: uuid
      - in: query
        name: status
        schema:
          type: string
      - in: query
        name: title
        schema:
          type: string
      tags:
      - resource-request
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceRequestListSpecList'
          description: ''
    post:
      operationId: api_v1_resource_create
      tags:
      - resource-request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRequestCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceRequestCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceRequestCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRequestListSpec'
          description: ''
  /api/v1/resource/{external_id}/:
    get:
      operationId: api_v1_resource_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - resource-request
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRequestListSpec'
          description: ''
    put:
      operationId: api_v1_resource_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - resource-request
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRequestCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceRequestCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceRequestCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRequestListSpec'
          description: ''
    delete:
      operationId: api_v1_resource_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - resource-request
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/resource/{resource_external_id}/comment/:
    get:
      operationId: api_v1_resource_comment_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: path
        name: resource_external_id
        schema:
          type: string
        required: true
      tags:
      - resource-request-comment
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedResourceRequestCommentListSpecList'
          description: ''
    post:
      operationId: api_v1_resource_comment_create
      parameters:
      - in: path
        name: resource_external_id
        schema:
          type: string
        required: true
      tags:
      - resource-request-comment
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ResourceRequestCommentCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ResourceRequestCommentCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ResourceRequestCommentCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRequestCommentListSpec'
          description: ''
  /api/v1/resource/{resource_external_id}/comment/{external_id}/:
    get:
      operationId: api_v1_resource_comment_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: resource_external_id
        schema:
          type: string
        required: true
      tags:
      - resource-request-comment
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ResourceRequestCommentListSpec'
          description: ''
    delete:
      operationId: api_v1_resource_comment_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      - in: path
        name: resource_external_id
        schema:
          type: string
        required: true
      tags:
      - resource-request-comment
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/resource/upsert/:
    post:
      operationId: api_v1_resource_upsert_create
      tags:
      - resource-request
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/role/:
    get:
      operationId: api_v1_role_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      tags:
      - role
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedRoleReadSpecList'
          description: ''
    post:
      operationId: api_v1_role_create
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleCreateSpec'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleReadSpec'
          description: ''
  /api/v1/role/{external_id}/:
    get:
      operationId: api_v1_role_retrieve
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - role
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleReadSpec'
          description: ''
    put:
      operationId: api_v1_role_update
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - role
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/RoleCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/RoleCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/RoleCreateSpec'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/RoleReadSpec'
          description: ''
    delete:
      operationId: api_v1_role_destroy
      parameters:
      - in: path
        name: external_id
        schema:
          type: string
          format: uuid
        required: true
      tags:
      - role
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/role/upsert/:
    post:
      operationId: api_v1_role_upsert_create
      tags:
      - role
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/users/:
    get:
      operationId: api_v1_users_list
      parameters:
      - in: query
        name: email
        schema:
          type: string
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: phone_number
        schema:
          type: string
      - name: search_text
        required: false
        in: query
        description: A search term.
        schema:
          type: string
      - in: query
        name: user_type
        schema:
          type: string
      - in: query
        name: username
        schema:
          type: string
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedUserSpecList'
          description: ''
    post:
      operationId: api_v1_users_create
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserCreateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserCreateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserCreateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSpec'
          description: ''
  /api/v1/users/{username}/:
    get:
      operationId: api_v1_users_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Username must be 4 to 16 characters long. It may only contain
            lowercase alphabets, numbers, underscores, hyphens and dots. It shouldn't
            start or end with underscores, hyphens or dots. It shouldn't contain consecutive
            underscores, hyphens or dots.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSpec'
          description: ''
    put:
      operationId: api_v1_users_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Username must be 4 to 16 characters long. It may only contain
            lowercase alphabets, numbers, underscores, hyphens and dots. It shouldn't
            start or end with underscores, hyphens or dots. It shouldn't contain consecutive
            underscores, hyphens or dots.
        required: true
      tags:
      - users
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/UserUpdateSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/UserUpdateSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/UserUpdateSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserSpec'
          description: ''
    delete:
      operationId: api_v1_users_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Username must be 4 to 16 characters long. It may only contain
            lowercase alphabets, numbers, underscores, hyphens and dots. It shouldn't
            start or end with underscores, hyphens or dots. It shouldn't contain consecutive
            underscores, hyphens or dots.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/users/{username}/check_availability/:
    get:
      operationId: api_v1_users_check_availability_retrieve
      description: Checks availability of username by getting as query, returns 200
        if available, and 409 otherwise.
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Username must be 4 to 16 characters long. It may only contain
            lowercase alphabets, numbers, underscores, hyphens and dots. It shouldn't
            start or end with underscores, hyphens or dots. It shouldn't contain consecutive
            underscores, hyphens or dots.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/users/{username}/pnconfig/:
    get:
      operationId: api_v1_users_pnconfig_retrieve
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Username must be 4 to 16 characters long. It may only contain
            lowercase alphabets, numbers, underscores, hyphens and dots. It shouldn't
            start or end with underscores, hyphens or dots. It shouldn't contain consecutive
            underscores, hyphens or dots.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    patch:
      operationId: api_v1_users_pnconfig_partial_update
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Username must be 4 to 16 characters long. It may only contain
            lowercase alphabets, numbers, underscores, hyphens and dots. It shouldn't
            start or end with underscores, hyphens or dots. It shouldn't contain consecutive
            underscores, hyphens or dots.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/users/{username}/profile_picture/:
    post:
      operationId: api_v1_users_profile_picture_create
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Username must be 4 to 16 characters long. It may only contain
            lowercase alphabets, numbers, underscores, hyphens and dots. It shouldn't
            start or end with underscores, hyphens or dots. It shouldn't contain consecutive
            underscores, hyphens or dots.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
    delete:
      operationId: api_v1_users_profile_picture_destroy
      parameters:
      - in: path
        name: username
        schema:
          type: string
          description: Username must be 4 to 16 characters long. It may only contain
            lowercase alphabets, numbers, underscores, hyphens and dots. It shouldn't
            start or end with underscores, hyphens or dots. It shouldn't contain consecutive
            underscores, hyphens or dots.
        required: true
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          description: No response body
  /api/v1/users/getcurrentuser/:
    get:
      operationId: api_v1_users_getcurrentuser_retrieve
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/users/upsert/:
    post:
      operationId: api_v1_users_upsert_create
      tags:
      - users
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/:
    get:
      operationId: api_v1_valueset_list
      parameters:
      - name: limit
        required: false
        in: query
        description: Number of results to return per page.
        schema:
          type: integer
      - in: query
        name: name
        schema:
          type: string
      - name: offset
        required: false
        in: query
        description: The initial index from which to return the results.
        schema:
          type: integer
      - in: query
        name: status
        schema:
          type: string
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/PaginatedValueSetReadSpecList'
          description: ''
    post:
      operationId: api_v1_valueset_create
      tags:
      - value-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValueSetReadSpec'
          description: ''
  /api/v1/valueset/{slug}/:
    get:
      operationId: api_v1_valueset_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValueSetReadSpec'
          description: ''
    put:
      operationId: api_v1_valueset_update
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ValueSetReadSpec'
          description: ''
    delete:
      operationId: api_v1_valueset_destroy
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '204':
          content:
            application/json:
              schema:
                description: No response body
          description: ''
  /api/v1/valueset/{slug}/add_favourite/:
    post:
      operationId: api_v1_valueset_add_favourite_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/add_recent_view/:
    post:
      operationId: api_v1_valueset_add_recent_view_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinimalCodeConcept'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MinimalCodeConcept'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MinimalCodeConcept'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/clear_favourites/:
    post:
      operationId: api_v1_valueset_clear_favourites_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/clear_recent_views/:
    post:
      operationId: api_v1_valueset_clear_recent_views_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/expand/:
    post:
      operationId: api_v1_valueset_expand_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ExpandRequest'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ExpandRequest'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ExpandRequest'
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/favourites/:
    get:
      operationId: api_v1_valueset_favourites_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/recent_views/:
    get:
      operationId: api_v1_valueset_recent_views_retrieve
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/remove_favourite/:
    post:
      operationId: api_v1_valueset_remove_favourite_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/remove_recent_view/:
    post:
      operationId: api_v1_valueset_remove_recent_view_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MinimalCodeConcept'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/MinimalCodeConcept'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/MinimalCodeConcept'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/{slug}/validate_code/:
    post:
      operationId: api_v1_valueset_validate_code_create
      parameters:
      - in: path
        name: slug
        schema:
          type: string
        required: true
      tags:
      - value-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coding'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/lookup_code/:
    post:
      operationId: api_v1_valueset_lookup_code_create
      tags:
      - value-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Coding'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/Coding'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/Coding'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/preview_search/:
    post:
      operationId: api_v1_valueset_preview_search_create
      tags:
      - value-set
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
          application/x-www-form-urlencoded:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
          multipart/form-data:
            schema:
              $ref: '#/components/schemas/ValueSetSpec'
        required: true
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
  /api/v1/valueset/upsert/:
    post:
      operationId: api_v1_valueset_upsert_create
      tags:
      - value-set
      security:
      - jwtAuth: []
      - basicAuth: []
      - cookieAuth: []
      responses:
        '200':
          description: No response body
components:
  schemas:
    AdmitSourcesChoices:
      enum:
      - hosp_trans
      - emd
      - outp
      - born
      - gp
      - mp
      - nursing
      - psych
      - rehab
      - other
      title: AdmitSourcesChoices
      type: string
    AllergyIntoleranceOnSetSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        onset_datetime:
          default: null
          format: date-time
          title: Onset Datetime
          type: string
        onset_age:
          default: null
          title: Onset Age
          type: integer
        onset_string:
          default: null
          title: Onset String
          type: string
        note:
          title: Note
          type: string
      required:
      - note
      title: AllergyIntoleranceOnSetSpec
      type: object
    AllergyIntoleranceReadSpec:
      description: Validation for deeper models may not be required on read, Just
        an extra optimisation
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        clinical_status:
          title: Clinical Status
          type: string
        verification_status:
          title: Verification Status
          type: string
        category:
          title: Category
          type: string
        criticality:
          title: Criticality
          type: string
        code:
          $ref: '#/components/schemas/Coding'
        encounter:
          format: uuid4
          title: Encounter
          type: string
        onset:
          $ref: '#/components/schemas/AllergyIntoleranceOnSetSpec'
        last_occurrence:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Last Occurrence
        recorded_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Recorded Date
        created_by:
          default: {}
          title: Created By
          type: object
        updated_by:
          default: {}
          title: Updated By
          type: object
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        allergy_intolerance_type:
          title: Allergy Intolerance Type
          type: string
      required:
      - clinical_status
      - verification_status
      - category
      - criticality
      - code
      - encounter
      - allergy_intolerance_type
      title: AllergyIntoleranceReadSpec
      type: object
    AllergyIntoleranceTypeOptions:
      enum:
      - allergy
      - intolerance
      title: AllergyIntoleranceTypeOptions
      type: string
    AllergyIntoleranceUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        clinical_status:
          $ref: '#/components/schemas/ClinicalStatusChoices'
        verification_status:
          $ref: '#/components/schemas/VerificationStatusChoices'
        criticality:
          $ref: '#/components/schemas/CriticalityChoices'
        last_occurrence:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Last Occurrence
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        encounter:
          format: uuid4
          title: Encounter
          type: string
        allergy_intolerance_type:
          $ref: '#/components/schemas/AllergyIntoleranceTypeOptions'
          default: allergy
      required:
      - clinical_status
      - verification_status
      - criticality
      - encounter
      title: AllergyIntoleranceUpdateSpec
      type: object
    AllergyIntoleranceWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        clinical_status:
          $ref: '#/components/schemas/ClinicalStatusChoices'
        verification_status:
          $ref: '#/components/schemas/VerificationStatusChoices'
        category:
          $ref: '#/components/schemas/CategoryChoices'
        criticality:
          $ref: '#/components/schemas/CriticalityChoices'
        last_occurrence:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Last Occurrence
        recorded_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Recorded Date
        encounter:
          format: uuid4
          title: Encounter
          type: string
        code:
          $ref: '#/components/schemas/BoundCoding'
        onset:
          $ref: '#/components/schemas/AllergyIntoleranceOnSetSpec'
          default: {}
        allergy_intolerance_type:
          $ref: '#/components/schemas/AllergyIntoleranceTypeOptions'
          default: allergy
      required:
      - clinical_status
      - verification_status
      - category
      - criticality
      - encounter
      - code
      title: AllergyIntoleranceWriteSpec
      type: object
    AnswerConstraint:
      enum:
      - required
      - optional
      title: AnswerConstraint
      type: string
    AnswerOption:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        value:
          description: Value based on question type
          title: Value
        initial_selected:
          default: false
          description: Whether option is initially selected
          title: Initial Selected
          type: boolean
      required:
      - value
      title: AnswerOption
      type: object
    AppointmentBookingSpec:
      properties:
        patient:
          format: uuid4
          title: Patient
          type: string
        reason_for_visit:
          title: Reason For Visit
          type: string
      required:
      - patient
      - reason_for_visit
      title: AppointmentBookingSpec
      type: object
    ArchiveRequestSpec:
      properties:
        archive_reason:
          title: Archive Reason
          type: string
      required:
      - archive_reason
      title: ArchiveRequestSpec
      type: object
    AvailabilityCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        slot_type:
          $ref: '#/components/schemas/SlotTypeOptions'
        slot_size_in_minutes:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          title: Slot Size In Minutes
        tokens_per_slot:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          title: Tokens Per Slot
        create_tokens:
          default: false
          title: Create Tokens
          type: boolean
        reason:
          default: ''
          title: Reason
          type: string
        availability:
          items:
            $ref: '#/components/schemas/AvailabilityDateTimeSpec'
          title: Availability
          type: array
        schedule:
          format: uuid4
          title: Schedule
          type: string
      required:
      - name
      - slot_type
      - slot_size_in_minutes
      - tokens_per_slot
      - availability
      - schedule
      title: AvailabilityCreateSpec
      type: object
    AvailabilityDateTimeSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        day_of_week:
          maximum: 6
          title: Day Of Week
          type: integer
        start_time:
          format: time
          title: Start Time
          type: string
        end_time:
          format: time
          title: End Time
          type: string
      required:
      - day_of_week
      - start_time
      - end_time
      title: AvailabilityDateTimeSpec
      type: object
    AvailabilityExceptionReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        reason:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Reason
        valid_from:
          format: date
          title: Valid From
          type: string
        valid_to:
          format: date
          title: Valid To
          type: string
        start_time:
          format: time
          title: Start Time
          type: string
        end_time:
          format: time
          title: End Time
          type: string
      required:
      - valid_from
      - valid_to
      - start_time
      - end_time
      title: AvailabilityExceptionReadSpec
      type: object
    AvailabilityExceptionWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        reason:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Reason
        valid_from:
          format: date
          title: Valid From
          type: string
        valid_to:
          format: date
          title: Valid To
          type: string
        start_time:
          format: time
          title: Start Time
          type: string
        end_time:
          format: time
          title: End Time
          type: string
        facility:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Facility
        user:
          format: uuid4
          title: User
          type: string
      required:
      - valid_from
      - valid_to
      - start_time
      - end_time
      - user
      title: AvailabilityExceptionWriteSpec
      type: object
    AvailabilityForScheduleSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        slot_type:
          $ref: '#/components/schemas/SlotTypeOptions'
        slot_size_in_minutes:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          title: Slot Size In Minutes
        tokens_per_slot:
          anyOf:
          - minimum: 1
            type: integer
          - type: 'null'
          title: Tokens Per Slot
        create_tokens:
          default: false
          title: Create Tokens
          type: boolean
        reason:
          default: ''
          title: Reason
          type: string
        availability:
          items:
            $ref: '#/components/schemas/AvailabilityDateTimeSpec'
          title: Availability
          type: array
      required:
      - name
      - slot_type
      - slot_size_in_minutes
      - tokens_per_slot
      - availability
      title: AvailabilityForScheduleSpec
      type: object
    BatchRequest:
      properties:
        requests:
          items:
            $ref: '#/components/schemas/Request'
          maxItems: 20
          minItems: 1
          title: Requests
          type: array
      required:
      - requests
      title: BatchRequest
      type: object
    BloodGroupChoices:
      enum:
      - A_negative
      - A_positive
      - B_negative
      - B_positive
      - AB_negative
      - AB_positive
      - O_negative
      - O_positive
      - unknown
      title: BloodGroupChoices
      type: string
    BookingStatusChoices:
      enum:
      - proposed
      - pending
      - booked
      - arrived
      - fulfilled
      - cancelled
      - noshow
      - entered_in_error
      - checked_in
      - waitlist
      - in_consultation
      - rescheduled
      title: BookingStatusChoices
      type: string
    BoundCoding:
      additionalProperties: false
      properties:
        system:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: System
        version:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Version
        code:
          title: Code
          type: string
        display:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Display
      required:
      - code
      title: BoundCoding
      type: object
    CancelAppointmentSpec:
      properties:
        patient:
          format: uuid4
          title: Patient
          type: string
        appointment:
          format: uuid4
          title: Appointment
          type: string
      required:
      - patient
      - appointment
      title: CancelAppointmentSpec
      type: object
    CategoryChoice:
      enum:
      - research
      - patient_privacy
      - treatment
      - dnr
      - comfort_care
      - acd
      - adr
      title: CategoryChoice
      type: string
    CategoryChoices:
      enum:
      - food
      - medication
      - environment
      - biologic
      title: CategoryChoices
      type: string
    ClassChoices:
      enum:
      - imp
      - amb
      - obsenc
      - emer
      - vr
      - hh
      title: ClassChoices
      type: string
    ClinicalStatusChoices:
      enum:
      - active
      - inactive
      - resolved
      title: ClinicalStatusChoices
      type: string
    CodeableConcept:
      additionalProperties: false
      properties:
        id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Id
        coding:
          anyOf:
          - items:
              $ref: '#/components/schemas/Coding'
            type: array
          - type: 'null'
          default: null
          title: Coding
        text:
          anyOf:
          - type: string
          - type: 'null'
          title: Text
      required:
      - text
      title: CodeableConcept
      type: object
    Coding:
      additionalProperties: false
      description: Represents a code from a code system
      properties:
        system:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: System
        version:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Version
        code:
          title: Code
          type: string
        display:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Display
      required:
      - code
      title: Coding
      type: object
    Component:
      properties:
        value:
          $ref: '#/components/schemas/QuestionnaireSubmitResultValue'
        interpretation:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Interpretation
        reference_range:
          default: []
          items:
            $ref: '#/components/schemas/ReferenceRange'
          title: Reference Range
          type: array
        code:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
        note:
          default: ''
          title: Note
          type: string
      required:
      - value
      title: Component
      type: object
    ConditionAbatementSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        abatement_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Abatement Datetime
        abatement_age:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Abatement Age
        abatement_string:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Abatement String
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      title: ConditionAbatementSpec
      type: object
    ConditionOnSetSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        onset_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Onset Datetime
        onset_age:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Onset Age
        onset_string:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Onset String
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      title: ConditionOnSetSpec
      type: object
    ConditionReadSpec:
      description: Validation for deeper models may not be required on read, Just
        an extra optimisation
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        clinical_status:
          title: Clinical Status
          type: string
        verification_status:
          title: Verification Status
          type: string
        category:
          title: Category
          type: string
        criticality:
          title: Criticality
          type: string
        severity:
          title: Severity
          type: string
        code:
          $ref: '#/components/schemas/Coding'
        encounter:
          format: uuid4
          title: Encounter
          type: string
        onset:
          $ref: '#/components/schemas/ConditionOnSetSpec'
        abatement:
          $ref: '#/components/schemas/ConditionAbatementSpec'
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
      required:
      - clinical_status
      - verification_status
      - category
      - criticality
      - severity
      - code
      - encounter
      - created_date
      - modified_date
      title: ConditionReadSpec
      type: object
    ConditionSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        clinical_status:
          anyOf:
          - $ref: '#/components/schemas/ClinicalStatusChoices'
          - type: 'null'
          default: null
        verification_status:
          $ref: '#/components/schemas/VerificationStatusChoices'
        severity:
          anyOf:
          - $ref: '#/components/schemas/SeverityChoices'
          - type: 'null'
          default: null
        code:
          $ref: '#/components/schemas/BoundCoding'
        encounter:
          format: uuid4
          title: Encounter
          type: string
        onset:
          $ref: '#/components/schemas/ConditionOnSetSpec'
          default: {}
        abatement:
          $ref: '#/components/schemas/ConditionAbatementSpec'
          default: {}
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        category:
          $ref: '#/components/schemas/CategoryChoices'
      required:
      - verification_status
      - code
      - encounter
      - category
      title: ConditionSpec
      type: object
    ConditionUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        clinical_status:
          anyOf:
          - $ref: '#/components/schemas/ClinicalStatusChoices'
          - type: 'null'
          default: null
        verification_status:
          $ref: '#/components/schemas/VerificationStatusChoices'
        severity:
          anyOf:
          - $ref: '#/components/schemas/SeverityChoices'
          - type: 'null'
          default: null
        code:
          $ref: '#/components/schemas/BoundCoding'
        onset:
          $ref: '#/components/schemas/ConditionOnSetSpec'
          default: {}
        abatement:
          $ref: '#/components/schemas/ConditionAbatementSpec'
          default: {}
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      required:
      - verification_status
      - code
      title: ConditionUpdateSpec
      type: object
    ConsentCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          description: Unique identifier for the consent record
          title: Id
        status:
          $ref: '#/components/schemas/ConsentStatusChoices'
        category:
          $ref: '#/components/schemas/CategoryChoice'
        date:
          format: date-time
          title: Date
          type: string
        period:
          $ref: '#/components/schemas/PeriodSpec'
        encounter:
          format: uuid4
          title: Encounter
          type: string
        decision:
          $ref: '#/components/schemas/DecisionType'
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      required:
      - status
      - category
      - date
      - encounter
      - decision
      title: ConsentCreateSpec
      type: object
    ConsentListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          description: Unique identifier for the consent record
          title: Id
        status:
          $ref: '#/components/schemas/ConsentStatusChoices'
        category:
          $ref: '#/components/schemas/CategoryChoice'
        date:
          format: date-time
          title: Date
          type: string
        period:
          $ref: '#/components/schemas/PeriodSpec'
        encounter:
          format: uuid4
          title: Encounter
          type: string
        decision:
          $ref: '#/components/schemas/DecisionType'
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        source_attachments:
          default: []
          items:
            type: object
          title: Source Attachments
          type: array
        verification_details:
          default: []
          items:
            type: object
          title: Verification Details
          type: array
      required:
      - status
      - category
      - date
      - encounter
      - decision
      title: ConsentListSpec
      type: object
    ConsentStatusChoices:
      enum:
      - draft
      - active
      - inactive
      - not_done
      - entered_in_error
      title: ConsentStatusChoices
      type: string
    ConsentUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          description: Unique identifier for the consent record
          title: Id
        status:
          anyOf:
          - $ref: '#/components/schemas/ConsentStatusChoices'
          - type: 'null'
          default: null
        category:
          anyOf:
          - $ref: '#/components/schemas/CategoryChoice'
          - type: 'null'
          default: null
        date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Date
        period:
          anyOf:
          - $ref: '#/components/schemas/PeriodSpec'
          - type: 'null'
          default: null
        encounter:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Encounter
        decision:
          anyOf:
          - $ref: '#/components/schemas/DecisionType'
          - type: 'null'
          default: null
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      title: ConsentUpdateSpec
      type: object
    ConsentVerificationSpec:
      properties:
        verified:
          title: Verified
          type: boolean
        verified_by:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Verified By
        verification_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Verification Date
        verification_type:
          $ref: '#/components/schemas/VerificationType'
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      required:
      - verified
      - verification_type
      title: ConsentVerificationSpec
      type: object
    ContactPoint:
      properties:
        system:
          $ref: '#/components/schemas/ContactPointSystemChoices'
        value:
          title: Value
          type: string
        use:
          $ref: '#/components/schemas/ContactPointUseChoices'
      required:
      - system
      - value
      - use
      title: ContactPoint
      type: object
    ContactPointSystemChoices:
      enum:
      - phone
      - fax
      - email
      - pager
      - url
      - sms
      - other
      title: ContactPointSystemChoices
      type: string
    ContactPointUseChoices:
      enum:
      - home
      - work
      - temp
      - old
      - mobile
      title: ContactPointUseChoices
      type: string
    CriticalityChoices:
      enum:
      - low
      - high
      - unable_to_assess
      title: CriticalityChoices
      type: string
    DecisionType:
      enum:
      - deny
      - permit
      title: DecisionType
      type: string
    DeviceAvailabilityStatusChoices:
      enum:
      - lost
      - damaged
      - destroyed
      - available
      title: DeviceAvailabilityStatusChoices
      type: string
    DeviceCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        identifier:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Identifier
        status:
          $ref: '#/components/schemas/DeviceStatusChoices'
        availability_status:
          $ref: '#/components/schemas/DeviceAvailabilityStatusChoices'
        manufacturer:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Manufacturer
        manufacture_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Manufacture Date
        expiration_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Expiration Date
        lot_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Lot Number
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Serial Number
        registered_name:
          title: Registered Name
          type: string
        user_friendly_name:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: User Friendly Name
        model_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Model Number
        part_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Part Number
        contact:
          default: []
          items:
            $ref: '#/components/schemas/ContactPoint'
          title: Contact
          type: array
        care_type:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Care Type
        care_metadata:
          default: {}
          title: Care Metadata
          type: object
      required:
      - status
      - availability_status
      - registered_name
      title: DeviceCreateSpec
      type: object
    DeviceEncounterHistoryListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        encounter:
          title: Encounter
          type: object
        created_by:
          title: Created By
          type: object
        start:
          format: date-time
          title: Start
          type: string
        end:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: End
      required:
      - encounter
      - created_by
      - start
      title: DeviceEncounterHistoryListSpec
      type: object
    DeviceListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        identifier:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Identifier
        status:
          $ref: '#/components/schemas/DeviceStatusChoices'
        availability_status:
          $ref: '#/components/schemas/DeviceAvailabilityStatusChoices'
        manufacturer:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Manufacturer
        manufacture_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Manufacture Date
        expiration_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Expiration Date
        lot_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Lot Number
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Serial Number
        registered_name:
          title: Registered Name
          type: string
        user_friendly_name:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: User Friendly Name
        model_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Model Number
        part_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Part Number
        contact:
          default: []
          items:
            $ref: '#/components/schemas/ContactPoint'
          title: Contact
          type: array
        care_type:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Care Type
        care_metadata:
          default: {}
          title: Care Metadata
          type: object
      required:
      - status
      - availability_status
      - registered_name
      title: DeviceListSpec
      type: object
    DeviceLocationHistoryListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        location:
          title: Location
          type: object
        created_by:
          title: Created By
          type: object
        start:
          format: date-time
          title: Start
          type: string
        end:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: End
      required:
      - location
      - created_by
      - start
      title: DeviceLocationHistoryListSpec
      type: object
    DeviceServiceHistoryListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        serviced_on:
          format: date-time
          title: Serviced On
          type: string
        note:
          title: Note
          type: string
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
      required:
      - serviced_on
      - note
      - created_date
      - modified_date
      title: DeviceServiceHistoryListSpec
      type: object
    DeviceServiceHistoryWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        serviced_on:
          format: date-time
          title: Serviced On
          type: string
        note:
          title: Note
          type: string
      required:
      - serviced_on
      - note
      title: DeviceServiceHistoryWriteSpec
      type: object
    DeviceStatusChoices:
      enum:
      - active
      - inactive
      - entered_in_error
      title: DeviceStatusChoices
      type: string
    DeviceUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        identifier:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Identifier
        status:
          $ref: '#/components/schemas/DeviceStatusChoices'
        availability_status:
          $ref: '#/components/schemas/DeviceAvailabilityStatusChoices'
        manufacturer:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Manufacturer
        manufacture_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Manufacture Date
        expiration_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Expiration Date
        lot_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Lot Number
        serial_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Serial Number
        registered_name:
          title: Registered Name
          type: string
        user_friendly_name:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: User Friendly Name
        model_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Model Number
        part_number:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Part Number
        contact:
          default: []
          items:
            $ref: '#/components/schemas/ContactPoint'
          title: Contact
          type: array
        care_metadata:
          default: {}
          title: Care Metadata
          type: object
      required:
      - status
      - availability_status
      - registered_name
      title: DeviceUpdateSpec
      type: object
    DietPreferenceChoices:
      enum:
      - vegetarian
      - dairy_free
      - nut_free
      - gluten_free
      - vegan
      - halal
      - kosher
      - none
      title: DietPreferenceChoices
      type: string
    DisabledDisplay:
      enum:
      - hidden
      - protected
      title: DisabledDisplay
      type: string
    DischargeDispositionChoices:
      enum:
      - home
      - alt_home
      - other_hcf
      - hosp
      - long
      - aadvice
      - exp
      - psy
      - rehab
      - snf
      - oth
      title: DischargeDispositionChoices
      type: string
    Dosage:
      properties:
        text:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Free text dosage instructions
          title: Text
        site:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        route:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        method:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        dose:
          anyOf:
          - $ref: '#/components/schemas/Quantity'
          - type: 'null'
          default: null
          description: The amount of medication administered
        rate:
          anyOf:
          - $ref: '#/components/schemas/Quantity'
          - type: 'null'
          default: null
          description: The speed of administration
      title: Dosage
      type: object
    DosageInstruction:
      properties:
        sequence:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Sequence
        text:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Text
        additional_instruction:
          anyOf:
          - items:
              $ref: '#/components/schemas/BoundCoding'
            type: array
          - type: 'null'
          default: null
          title: Additional Instruction
        patient_instruction:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Patient Instruction
        timing:
          anyOf:
          - $ref: '#/components/schemas/Timing'
          - type: 'null'
          default: null
        as_needed_boolean:
          title: As Needed Boolean
          type: boolean
        as_needed_for:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        site:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        route:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        method:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        dose_and_rate:
          anyOf:
          - $ref: '#/components/schemas/DoseAndRate'
          - type: 'null'
          default: null
        max_dose_per_period:
          anyOf:
          - $ref: '#/components/schemas/DoseRange'
          - type: 'null'
          default: null
      required:
      - as_needed_boolean
      title: DosageInstruction
      type: object
    DosageQuantity:
      properties:
        value:
          title: Value
          type: number
        unit:
          $ref: '#/components/schemas/Coding'
      required:
      - value
      - unit
      title: DosageQuantity
      type: object
    DoseAndRate:
      properties:
        type:
          $ref: '#/components/schemas/DoseType'
        dose_range:
          anyOf:
          - $ref: '#/components/schemas/DoseRange'
          - type: 'null'
          default: null
        dose_quantity:
          anyOf:
          - $ref: '#/components/schemas/DosageQuantity'
          - type: 'null'
          default: null
      required:
      - type
      title: DoseAndRate
      type: object
    DoseRange:
      properties:
        low:
          $ref: '#/components/schemas/DosageQuantity'
        high:
          $ref: '#/components/schemas/DosageQuantity'
      required:
      - low
      - high
      title: DoseRange
      type: object
    DoseType:
      enum:
      - ordered
      - calculated
      title: DoseType
      type: string
    EnableBehavior:
      enum:
      - all
      - any
      title: EnableBehavior
      type: string
    EnableOperator:
      enum:
      - exists
      - equals
      - not_equals
      - greater
      - less
      - greater_or_equals
      - less_or_equals
      title: EnableOperator
      type: string
    EnableWhen:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        question:
          description: Link ID of the question to check against
          title: Question
          type: string
        operator:
          $ref: '#/components/schemas/EnableOperator'
        answer:
          description: Value for operator, based on question type
          title: Answer
      required:
      - question
      - operator
      - answer
      title: EnableWhen
      type: object
    EncounterCareTeamMemberSpec:
      properties:
        user_id:
          format: uuid4
          title: User Id
          type: string
        role:
          $ref: '#/components/schemas/BoundCoding'
      required:
      - user_id
      - role
      title: EncounterCareTeamMemberSpec
      type: object
    EncounterCareTeamMemberWriteSpec:
      properties:
        members:
          items:
            $ref: '#/components/schemas/EncounterCareTeamMemberSpec'
          title: Members
          type: array
      required:
      - members
      title: EncounterCareTeamMemberWriteSpec
      type: object
    EncounterCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/StatusChoices'
        encounter_class:
          $ref: '#/components/schemas/ClassChoices'
        period:
          $ref: '#/components/schemas/PeriodSpec'
          default: {}
        hospitalization:
          anyOf:
          - $ref: '#/components/schemas/HospitalizationSpec'
          - type: 'null'
          default: {}
        priority:
          $ref: '#/components/schemas/EncounterPriorityChoices'
        external_identifier:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: External Identifier
        discharge_summary_advice:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Discharge Summary Advice
        patient:
          format: uuid4
          title: Patient
          type: string
        facility:
          format: uuid4
          title: Facility
          type: string
        organizations:
          default: []
          items:
            format: uuid4
            type: string
          title: Organizations
          type: array
        appointment:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Appointment
      required:
      - status
      - encounter_class
      - priority
      - patient
      - facility
      title: EncounterCreateSpec
      type: object
    EncounterListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/StatusChoices'
        encounter_class:
          $ref: '#/components/schemas/ClassChoices'
        period:
          $ref: '#/components/schemas/PeriodSpec'
          default: {}
        hospitalization:
          anyOf:
          - $ref: '#/components/schemas/HospitalizationSpec'
          - type: 'null'
          default: {}
        priority:
          $ref: '#/components/schemas/EncounterPriorityChoices'
        external_identifier:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: External Identifier
        discharge_summary_advice:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Discharge Summary Advice
        patient:
          title: Patient
          type: object
        facility:
          title: Facility
          type: object
        status_history:
          title: Status History
          type: object
        encounter_class_history:
          title: Encounter Class History
          type: object
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
      required:
      - status
      - encounter_class
      - priority
      - patient
      - facility
      - status_history
      - encounter_class_history
      - created_date
      - modified_date
      title: EncounterListSpec
      type: object
    EncounterOrganizationManageSpec:
      properties:
        organization:
          format: uuid4
          title: Organization
          type: string
      required:
      - organization
      title: EncounterOrganizationManageSpec
      type: object
    EncounterPriorityChoices:
      enum:
      - ASAP
      - callback_results
      - callback_for_scheduling
      - elective
      - emergency
      - preop
      - as_needed
      - routine
      - rush_reporting
      - stat
      - timing_critical
      - use_as_directed
      - urgent
      title: EncounterPriorityChoices
      type: string
    EncounterRetrieveSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        permissions:
          default: []
          items:
            type: string
          title: Permissions
          type: array
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/StatusChoices'
        encounter_class:
          $ref: '#/components/schemas/ClassChoices'
        period:
          $ref: '#/components/schemas/PeriodSpec'
          default: {}
        hospitalization:
          anyOf:
          - $ref: '#/components/schemas/HospitalizationSpec'
          - type: 'null'
          default: {}
        priority:
          $ref: '#/components/schemas/EncounterPriorityChoices'
        external_identifier:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: External Identifier
        discharge_summary_advice:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Discharge Summary Advice
        patient:
          title: Patient
          type: object
        facility:
          title: Facility
          type: object
        status_history:
          title: Status History
          type: object
        encounter_class_history:
          title: Encounter Class History
          type: object
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
        appointment:
          default: {}
          title: Appointment
          type: object
        created_by:
          default: {}
          title: Created By
          type: object
        updated_by:
          default: {}
          title: Updated By
          type: object
        organizations:
          default: []
          items:
            type: object
          title: Organizations
          type: array
        current_location:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Current Location
        location_history:
          default: []
          items:
            type: object
          title: Location History
          type: array
        care_team:
          default: []
          items:
            type: object
          title: Care Team
          type: array
      required:
      - status
      - encounter_class
      - priority
      - patient
      - facility
      - status_history
      - encounter_class_history
      - created_date
      - modified_date
      title: EncounterRetrieveSpec
      type: object
    EncounterUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/StatusChoices'
        encounter_class:
          $ref: '#/components/schemas/ClassChoices'
        period:
          $ref: '#/components/schemas/PeriodSpec'
          default: {}
        hospitalization:
          anyOf:
          - $ref: '#/components/schemas/HospitalizationSpec'
          - type: 'null'
          default: {}
        priority:
          $ref: '#/components/schemas/EncounterPriorityChoices'
        external_identifier:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: External Identifier
        discharge_summary_advice:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Discharge Summary Advice
      required:
      - status
      - encounter_class
      - priority
      title: EncounterUpdateSpec
      type: object
    ExpandRequest:
      properties:
        search:
          default: ''
          title: Search
          type: string
        count:
          default: 10
          exclusiveMaximum: 100
          exclusiveMinimum: 0
          title: Count
          type: integer
        display_language:
          default: en-gb
          title: Display Language
          type: string
      title: ExpandRequest
      type: object
    FacilityCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        longitude:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          title: Longitude
        latitude:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          title: Latitude
        pincode:
          title: Pincode
          type: integer
        address:
          title: Address
          type: string
        phone_number:
          title: Phone Number
          type: string
        middleware_address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Middleware Address
        facility_type:
          title: Facility Type
          type: string
        is_public:
          default: false
          title: Is Public
          type: boolean
        geo_organization:
          format: uuid4
          title: Geo Organization
          type: string
        features:
          items:
            type: integer
          title: Features
          type: array
      required:
      - name
      - description
      - pincode
      - address
      - phone_number
      - facility_type
      - geo_organization
      - features
      title: FacilityCreateSpec
      type: object
    FacilityLocationEncounterAssignSpec:
      properties:
        encounter:
          format: uuid4
          title: Encounter
          type: string
      required:
      - encounter
      title: FacilityLocationEncounterAssignSpec
      type: object
    FacilityLocationEncounterCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        status:
          $ref: '#/components/schemas/LocationEncounterAvailabilityStatusChoices'
        encounter:
          format: uuid4
          title: Encounter
          type: string
        start_datetime:
          format: date-time
          title: Start Datetime
          type: string
        end_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: End Datetime
      required:
      - status
      - encounter
      - start_datetime
      title: FacilityLocationEncounterCreateSpec
      type: object
    FacilityLocationEncounterReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        encounter:
          format: uuid4
          title: Encounter
          type: string
        start_datetime:
          format: date-time
          title: Start Datetime
          type: string
        end_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: End Datetime
        status:
          title: Status
          type: string
        created_by:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Created By
        updated_by:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Updated By
      required:
      - encounter
      - start_datetime
      - status
      title: FacilityLocationEncounterReadSpec
      type: object
    FacilityLocationEncounterUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        status:
          $ref: '#/components/schemas/LocationEncounterAvailabilityStatusChoices'
        start_datetime:
          format: date-time
          title: Start Datetime
          type: string
        end_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          title: End Datetime
      required:
      - status
      - start_datetime
      - end_datetime
      title: FacilityLocationEncounterUpdateSpec
      type: object
    FacilityLocationFormChoices:
      enum:
      - si
      - bu
      - wi
      - wa
      - lvl
      - co
      - ro
      - bd
      - ve
      - ho
      - ca
      - rd
      - area
      - jdn
      - vi
      title: FacilityLocationFormChoices
      type: string
    FacilityLocationListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        status:
          $ref: '#/components/schemas/StatusChoices'
        operational_status:
          $ref: '#/components/schemas/FacilityLocationOperationalStatusChoices'
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        location_type:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
        form:
          $ref: '#/components/schemas/FacilityLocationFormChoices'
        sort_index:
          anyOf:
          - maximum: 10000
            minimum: 0
            type: integer
          - type: 'null'
          default: 0
          title: Sort Index
        parent:
          title: Parent
          type: object
        mode:
          title: Mode
          type: string
        has_children:
          title: Has Children
          type: boolean
        availability_status:
          title: Availability Status
          type: string
        current_encounter:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Current Encounter
      required:
      - status
      - operational_status
      - name
      - description
      - form
      - parent
      - mode
      - has_children
      - availability_status
      title: FacilityLocationListSpec
      type: object
    FacilityLocationModeChoices:
      enum:
      - instance
      - kind
      title: FacilityLocationModeChoices
      type: string
    FacilityLocationOperationalStatusChoices:
      enum:
      - C
      - H
      - O
      - U
      - K
      - I
      title: FacilityLocationOperationalStatusChoices
      type: string
    FacilityLocationOrganizationManageSpec:
      properties:
        organization:
          format: uuid4
          title: Organization
          type: string
      required:
      - organization
      title: FacilityLocationOrganizationManageSpec
      type: object
    FacilityLocationUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        status:
          $ref: '#/components/schemas/StatusChoices'
        operational_status:
          $ref: '#/components/schemas/FacilityLocationOperationalStatusChoices'
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        location_type:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
        form:
          $ref: '#/components/schemas/FacilityLocationFormChoices'
        sort_index:
          anyOf:
          - maximum: 10000
            minimum: 0
            type: integer
          - type: 'null'
          default: 0
          title: Sort Index
      required:
      - status
      - operational_status
      - name
      - description
      - form
      title: FacilityLocationUpdateSpec
      type: object
    FacilityLocationWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        status:
          $ref: '#/components/schemas/StatusChoices'
        operational_status:
          $ref: '#/components/schemas/FacilityLocationOperationalStatusChoices'
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        location_type:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
        form:
          $ref: '#/components/schemas/FacilityLocationFormChoices'
        sort_index:
          anyOf:
          - maximum: 10000
            minimum: 0
            type: integer
          - type: 'null'
          default: 0
          title: Sort Index
        parent:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Parent
        organizations:
          items:
            format: uuid4
            type: string
          title: Organizations
          type: array
        mode:
          $ref: '#/components/schemas/FacilityLocationModeChoices'
      required:
      - status
      - operational_status
      - name
      - description
      - form
      - organizations
      - mode
      title: FacilityLocationWriteSpec
      type: object
    FacilityOrganizationReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        active:
          default: true
          title: Active
          type: boolean
        name:
          title: Name
          type: string
        description:
          default: ''
          title: Description
          type: string
        metadata:
          default: {}
          title: Metadata
          type: object
        org_type:
          $ref: '#/components/schemas/FacilityOrganizationTypeChoices'
        parent:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Parent
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        system_generated:
          title: System Generated
          type: boolean
        level_cache:
          default: 0
          title: Level Cache
          type: integer
        has_children:
          title: Has Children
          type: boolean
      required:
      - name
      - org_type
      - system_generated
      - has_children
      title: FacilityOrganizationReadSpec
      type: object
    FacilityOrganizationTypeChoices:
      enum:
      - dept
      - team
      - root
      - role
      - other
      title: FacilityOrganizationTypeChoices
      type: string
    FacilityOrganizationUserReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          format: uuid4
          title: Id
          type: string
        user:
          title: User
          type: object
        role:
          title: Role
          type: object
      required:
      - id
      - user
      - role
      title: FacilityOrganizationUserReadSpec
      type: object
    FacilityOrganizationUserUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        role:
          format: uuid4
          title: Role
          type: string
      required:
      - role
      title: FacilityOrganizationUserUpdateSpec
      type: object
    FacilityOrganizationUserWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        role:
          format: uuid4
          title: Role
          type: string
        user:
          format: uuid4
          title: User
          type: string
      required:
      - role
      - user
      title: FacilityOrganizationUserWriteSpec
      type: object
    FacilityOrganizationWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        active:
          default: true
          title: Active
          type: boolean
        name:
          title: Name
          type: string
        description:
          default: ''
          title: Description
          type: string
        metadata:
          default: {}
          title: Metadata
          type: object
        facility:
          format: uuid4
          title: Facility
          type: string
        org_type:
          $ref: '#/components/schemas/FacilityOrganizationTypeChoices'
        parent:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Parent
      required:
      - name
      - facility
      - org_type
      title: FacilityOrganizationWriteSpec
      type: object
    FacilityReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        longitude:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          title: Longitude
        latitude:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          title: Latitude
        pincode:
          title: Pincode
          type: integer
        address:
          title: Address
          type: string
        phone_number:
          title: Phone Number
          type: string
        middleware_address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Middleware Address
        facility_type:
          title: Facility Type
          type: string
        is_public:
          default: false
          title: Is Public
          type: boolean
        features:
          items:
            type: integer
          title: Features
          type: array
        cover_image_url:
          title: Cover Image Url
          type: string
        read_cover_image_url:
          title: Read Cover Image Url
          type: string
        geo_organization:
          default: {}
          title: Geo Organization
          type: object
      required:
      - name
      - description
      - pincode
      - address
      - phone_number
      - facility_type
      - features
      - cover_image_url
      - read_cover_image_url
      title: FacilityReadSpec
      type: object
    FileCategoryChoices:
      enum:
      - audio
      - xray
      - identity_proof
      - unspecified
      - discharge_summary
      - consent_attachment
      title: FileCategoryChoices
      type: string
    FileTypeChoices:
      enum:
      - patient
      - encounter
      - consent
      title: FileTypeChoices
      type: string
    FileUploadCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        original_name:
          title: Original Name
          type: string
        file_type:
          $ref: '#/components/schemas/FileTypeChoices'
        file_category:
          $ref: '#/components/schemas/FileCategoryChoices'
        associating_id:
          title: Associating Id
          type: string
        mime_type:
          title: Mime Type
          type: string
      required:
      - name
      - original_name
      - file_type
      - file_category
      - associating_id
      - mime_type
      title: FileUploadCreateSpec
      type: object
    FileUploadListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        file_type:
          $ref: '#/components/schemas/FileTypeChoices'
        file_category:
          $ref: '#/components/schemas/FileCategoryChoices'
        associating_id:
          title: Associating Id
          type: string
        archived_by:
          anyOf:
          - $ref: '#/components/schemas/UserSpec'
          - type: 'null'
          default: null
        archived_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Archived Datetime
        upload_completed:
          title: Upload Completed
          type: boolean
        is_archived:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Is Archived
        archive_reason:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Archive Reason
        created_date:
          format: date-time
          title: Created Date
          type: string
        extension:
          title: Extension
          type: string
        uploaded_by:
          title: Uploaded By
          type: object
        mime_type:
          title: Mime Type
          type: string
      required:
      - name
      - file_type
      - file_category
      - associating_id
      - upload_completed
      - created_date
      - extension
      - uploaded_by
      - mime_type
      title: FileUploadListSpec
      type: object
    FileUploadUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
      required:
      - name
      title: FileUploadUpdateSpec
      type: object
    GenderChoices:
      enum:
      - male
      - female
      - non_binary
      - transgender
      title: GenderChoices
      type: string
    HospitalizationSpec:
      properties:
        re_admission:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Re Admission
        admit_source:
          anyOf:
          - $ref: '#/components/schemas/AdmitSourcesChoices'
          - type: 'null'
          default: null
        discharge_disposition:
          anyOf:
          - $ref: '#/components/schemas/DischargeDispositionChoices'
          - type: 'null'
          default: null
        diet_preference:
          anyOf:
          - $ref: '#/components/schemas/DietPreferenceChoices'
          - type: 'null'
          default: null
      title: HospitalizationSpec
      type: object
    LocationEncounterAvailabilityStatusChoices:
      enum:
      - planned
      - active
      - reserved
      - completed
      title: LocationEncounterAvailabilityStatusChoices
      type: string
    LoginMethod:
      enum:
      - totp
      - backup
      title: LoginMethod
      type: string
    MFALoginRequest:
      properties:
        method:
          $ref: '#/components/schemas/LoginMethod'
        code:
          title: Code
          type: string
        temp_token:
          title: Temp Token
          type: string
      required:
      - method
      - code
      - temp_token
      title: MFALoginRequest
      type: object
    MFALoginResponse:
      properties:
        access:
          title: Access
          type: string
        refresh:
          title: Refresh
          type: string
      required:
      - access
      - refresh
      title: MFALoginResponse
      type: object
    MedicationAdministrationCategory:
      enum:
      - inpatient
      - outpatient
      - community
      - discharge
      title: MedicationAdministrationCategory
      type: string
    MedicationAdministrationPerformer:
      properties:
        actor:
          description: The user who performed the administration
          format: uuid4
          title: Actor
          type: string
        function:
          anyOf:
          - $ref: '#/components/schemas/MedicationAdministrationPerformerFunction'
          - type: 'null'
          description: The function of the performer
      required:
      - actor
      - function
      title: MedicationAdministrationPerformer
      type: object
    MedicationAdministrationPerformerFunction:
      enum:
      - performer
      - verifier
      - witness
      title: MedicationAdministrationPerformerFunction
      type: string
    MedicationAdministrationReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/MedicationAdministrationStatus'
        status_reason:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        category:
          anyOf:
          - $ref: '#/components/schemas/MedicationAdministrationCategory'
          - type: 'null'
          default: null
        medication:
          $ref: '#/components/schemas/BoundCoding'
        authored_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          description: When request was initially authored
          title: Authored On
        occurrence_period_start:
          description: When the medication was administration started
          format: date-time
          title: Occurrence Period Start
          type: string
        occurrence_period_end:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Occurrence Period End
        recorded:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          description: When administration was recorded
          title: Recorded
        encounter:
          description: The encounter where the administration was noted
          format: uuid4
          title: Encounter
          type: string
        request:
          description: The medication request under which the administration was made
          format: uuid4
          title: Request
          type: string
        performer:
          anyOf:
          - items:
              $ref: '#/components/schemas/MedicationAdministrationPerformer'
            type: array
          - type: 'null'
          default: null
          description: Who administered the medication
          title: Performer
        dosage:
          anyOf:
          - $ref: '#/components/schemas/Dosage'
          - type: 'null'
          default: null
          description: The dosage of the medication
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        created_by:
          $ref: '#/components/schemas/UserSpec'
      required:
      - status
      - medication
      - occurrence_period_start
      - encounter
      - request
      title: MedicationAdministrationReadSpec
      type: object
    MedicationAdministrationSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/MedicationAdministrationStatus'
        status_reason:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        category:
          anyOf:
          - $ref: '#/components/schemas/MedicationAdministrationCategory'
          - type: 'null'
          default: null
        medication:
          $ref: '#/components/schemas/BoundCoding'
        authored_on:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          description: When request was initially authored
          title: Authored On
        occurrence_period_start:
          description: When the medication was administration started
          format: date-time
          title: Occurrence Period Start
          type: string
        occurrence_period_end:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Occurrence Period End
        recorded:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          description: When administration was recorded
          title: Recorded
        encounter:
          description: The encounter where the administration was noted
          format: uuid4
          title: Encounter
          type: string
        request:
          description: The medication request under which the administration was made
          format: uuid4
          title: Request
          type: string
        performer:
          anyOf:
          - items:
              $ref: '#/components/schemas/MedicationAdministrationPerformer'
            type: array
          - type: 'null'
          default: null
          description: Who administered the medication
          title: Performer
        dosage:
          anyOf:
          - $ref: '#/components/schemas/Dosage'
          - type: 'null'
          default: null
          description: The dosage of the medication
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      required:
      - status
      - medication
      - occurrence_period_start
      - encounter
      - request
      title: MedicationAdministrationSpec
      type: object
    MedicationAdministrationStatus:
      enum:
      - completed
      - not_done
      - entered_in_error
      - stopped
      - in_progress
      - on_hold
      - unknown
      - cancelled
      title: MedicationAdministrationStatus
      type: string
    MedicationAdministrationUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        status:
          $ref: '#/components/schemas/MedicationAdministrationStatus'
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        occurrence_period_end:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Occurrence Period End
      required:
      - status
      title: MedicationAdministrationUpdateSpec
      type: object
    MedicationRequestCategory:
      enum:
      - inpatient
      - outpatient
      - community
      - discharge
      title: MedicationRequestCategory
      type: string
    MedicationRequestIntent:
      enum:
      - proposal
      - plan
      - order
      - original_order
      - reflex_order
      - filler_order
      - instance_order
      title: MedicationRequestIntent
      type: string
    MedicationRequestPriority:
      enum:
      - routine
      - urgent
      - asap
      - stat
      title: MedicationRequestPriority
      type: string
    MedicationRequestReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/MedicationRequestStatus'
        status_reason:
          anyOf:
          - $ref: '#/components/schemas/StatusReason'
          - type: 'null'
          default: null
        intent:
          $ref: '#/components/schemas/MedicationRequestIntent'
        category:
          $ref: '#/components/schemas/MedicationRequestCategory'
        priority:
          $ref: '#/components/schemas/MedicationRequestPriority'
        do_not_perform:
          title: Do Not Perform
          type: boolean
        medication:
          $ref: '#/components/schemas/BoundCoding'
        encounter:
          format: uuid4
          title: Encounter
          type: string
        dosage_instruction:
          items:
            $ref: '#/components/schemas/DosageInstruction'
          title: Dosage Instruction
          type: array
        authored_on:
          format: date-time
          title: Authored On
          type: string
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
      required:
      - status
      - intent
      - category
      - priority
      - do_not_perform
      - medication
      - encounter
      - dosage_instruction
      - authored_on
      - created_date
      - modified_date
      title: MedicationRequestReadSpec
      type: object
    MedicationRequestSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/MedicationRequestStatus'
        status_reason:
          anyOf:
          - $ref: '#/components/schemas/StatusReason'
          - type: 'null'
          default: null
        intent:
          $ref: '#/components/schemas/MedicationRequestIntent'
        category:
          $ref: '#/components/schemas/MedicationRequestCategory'
        priority:
          $ref: '#/components/schemas/MedicationRequestPriority'
        do_not_perform:
          title: Do Not Perform
          type: boolean
        medication:
          $ref: '#/components/schemas/BoundCoding'
        encounter:
          format: uuid4
          title: Encounter
          type: string
        dosage_instruction:
          items:
            $ref: '#/components/schemas/DosageInstruction'
          title: Dosage Instruction
          type: array
        authored_on:
          format: date-time
          title: Authored On
          type: string
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        requester:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Requester
      required:
      - status
      - intent
      - category
      - priority
      - do_not_perform
      - medication
      - encounter
      - dosage_instruction
      - authored_on
      title: MedicationRequestSpec
      type: object
    MedicationRequestStatus:
      enum:
      - active
      - on_hold
      - ended
      - stopped
      - completed
      - cancelled
      - entered_in_error
      - draft
      - unknown
      title: MedicationRequestStatus
      type: string
    MedicationRequestUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        status:
          $ref: '#/components/schemas/MedicationRequestStatus'
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      required:
      - status
      title: MedicationRequestUpdateSpec
      type: object
    MedicationStatementInformationSourceType:
      enum:
      - related_person
      - practitioner
      - patient
      title: MedicationStatementInformationSourceType
      type: string
    MedicationStatementReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/MedicationStatementStatus'
        reason:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Reason
        medication:
          $ref: '#/components/schemas/BoundCoding'
        dosage_text:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Dosage Text
        effective_period:
          anyOf:
          - $ref: '#/components/schemas/PeriodSpec'
          - type: 'null'
          default: null
        encounter:
          format: uuid4
          title: Encounter
          type: string
        information_source:
          anyOf:
          - $ref: '#/components/schemas/MedicationStatementInformationSourceType'
          - type: 'null'
          default: null
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
      required:
      - status
      - medication
      - encounter
      - created_date
      - modified_date
      title: MedicationStatementReadSpec
      type: object
    MedicationStatementSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/MedicationStatementStatus'
        reason:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Reason
        medication:
          $ref: '#/components/schemas/BoundCoding'
        dosage_text:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Dosage Text
        effective_period:
          anyOf:
          - $ref: '#/components/schemas/PeriodSpec'
          - type: 'null'
          default: null
        encounter:
          format: uuid4
          title: Encounter
          type: string
        information_source:
          anyOf:
          - $ref: '#/components/schemas/MedicationStatementInformationSourceType'
          - type: 'null'
          default: null
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      required:
      - status
      - medication
      - encounter
      title: MedicationStatementSpec
      type: object
    MedicationStatementStatus:
      enum:
      - active
      - on_hold
      - completed
      - stopped
      - unknown
      - entered_in_error
      - not_taken
      - intended
      title: MedicationStatementStatus
      type: string
    MedicationStatementUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        status:
          $ref: '#/components/schemas/MedicationStatementStatus'
        effective_period:
          anyOf:
          - $ref: '#/components/schemas/PeriodSpec'
          - type: 'null'
          default: null
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      required:
      - status
      title: MedicationStatementUpdateSpec
      type: object
    MetaArtifactAssociatingTypeChoices:
      enum:
      - patient
      - encounter
      title: MetaArtifactAssociatingTypeChoices
      type: string
    MetaArtifactCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        object_value:
          anyOf:
          - type: object
          - items: {}
            type: array
          title: Object Value
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        associating_type:
          $ref: '#/components/schemas/MetaArtifactAssociatingTypeChoices'
        associating_id:
          format: uuid4
          title: Associating Id
          type: string
        object_type:
          $ref: '#/components/schemas/MetaArtifactObjectTypeChoices'
        name:
          title: Name
          type: string
      required:
      - object_value
      - associating_type
      - associating_id
      - object_type
      - name
      title: MetaArtifactCreateSpec
      type: object
    MetaArtifactObjectTypeChoices:
      const: drawing
      enum:
      - drawing
      title: MetaArtifactObjectTypeChoices
      type: string
    MetaArtifactReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        object_value:
          anyOf:
          - type: object
          - items: {}
            type: array
          title: Object Value
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        associating_type:
          $ref: '#/components/schemas/MetaArtifactAssociatingTypeChoices'
        associating_id:
          format: uuid4
          title: Associating Id
          type: string
        object_type:
          $ref: '#/components/schemas/MetaArtifactObjectTypeChoices'
        name:
          title: Name
          type: string
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
      required:
      - object_value
      - associating_type
      - associating_id
      - object_type
      - name
      - created_date
      - modified_date
      - created_by
      - updated_by
      title: MetaArtifactReadSpec
      type: object
    MetaArtifactUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        object_value:
          anyOf:
          - type: object
          - items: {}
            type: array
          title: Object Value
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
      required:
      - object_value
      title: MetaArtifactUpdateSpec
      type: object
    MinimalCodeConcept:
      properties:
        display:
          title: Display
          type: string
        system:
          title: System
          type: string
        code:
          title: Code
          type: string
        designation:
          anyOf:
          - items: {}
            type: array
          - type: 'null'
          default: null
          title: Designation
      required:
      - display
      - system
      - code
      title: MinimalCodeConcept
      type: object
    NoteMessageCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        message:
          title: Message
          type: string
      required:
      - message
      title: NoteMessageCreateSpec
      type: object
    NoteMessageReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        message:
          title: Message
          type: string
        message_history:
          title: Message History
          type: object
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
      required:
      - message
      - message_history
      - created_date
      - modified_date
      title: NoteMessageReadSpec
      type: object
    NoteMessageUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        message:
          title: Message
          type: string
      required:
      - message
      title: NoteMessageUpdateSpec
      type: object
    NoteThreadCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        title:
          title: Title
          type: string
        encounter:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Encounter
      required:
      - title
      title: NoteThreadCreateSpec
      type: object
    NoteThreadReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        title:
          title: Title
          type: string
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
      required:
      - title
      - created_date
      - modified_date
      title: NoteThreadReadSpec
      type: object
    NoteThreadUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        title:
          title: Title
          type: string
      required:
      - title
      title: NoteThreadUpdateSpec
      type: object
    OTPLoginRequestSpec:
      properties:
        phone_number:
          title: Phone Number
          type: string
      required:
      - phone_number
      title: OTPLoginRequestSpec
      type: object
    OTPLoginSpec:
      properties:
        phone_number:
          title: Phone Number
          type: string
        otp:
          maxLength: 5
          minLength: 5
          title: Otp
          type: string
      required:
      - phone_number
      - otp
      title: OTPLoginSpec
      type: object
    ObservationAnalyseRequest:
      properties:
        codes:
          items:
            $ref: '#/components/schemas/Coding'
          maxItems: 20
          minItems: 1
          title: Codes
          type: array
        page_size:
          default: 10
          maximum: 30
          title: Page Size
          type: integer
      required:
      - codes
      title: ObservationAnalyseRequest
      type: object
    ObservationReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: ''
          description: Unique ID in the system
          title: Id
          type: string
        status:
          $ref: '#/components/schemas/ObservationStatus'
          description: Status of the observation (final or amended)
        category:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
          description: List of codeable concepts derived from the questionnaire
        main_code:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
          description: Code for the observation (LOINC binding)
        alternate_coding:
          $ref: '#/components/schemas/CodeableConcept'
        subject_type:
          $ref: '#/components/schemas/SubjectType'
        encounter:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Encounter
        effective_datetime:
          description: Datetime when observation was recorded
          format: date-time
          title: Effective Datetime
          type: string
        performer:
          anyOf:
          - $ref: '#/components/schemas/Performer'
          - type: 'null'
          default: null
          description: Who performed the observation (currently supports RelatedPerson)
        value_type:
          $ref: '#/components/schemas/QuestionType'
          description: Type of value
        value:
          $ref: '#/components/schemas/QuestionnaireSubmitResultValue'
          description: Value of the observation if not code. For codes, contains display
            text
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Additional notes about the observation
          title: Note
        body_site:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        method:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        reference_range:
          default: []
          description: Reference ranges for interpretation
          items:
            $ref: '#/components/schemas/ReferenceRange'
          title: Reference Range
          type: array
        interpretation:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Interpretation based on the reference range
          title: Interpretation
        parent:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          description: ID reference to parent observation
          title: Parent
        questionnaire_response:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Questionnaire Response
        component:
          default: []
          items:
            $ref: '#/components/schemas/Component'
          title: Component
          type: array
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        data_entered_by:
          $ref: '#/components/schemas/UserSpec'
      required:
      - status
      - subject_type
      - effective_datetime
      - value_type
      - value
      title: ObservationReadSpec
      type: object
    ObservationStatus:
      enum:
      - final
      - amended
      title: ObservationStatus
      type: string
    OrganizationReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          title: Id
          type: string
        active:
          default: true
          title: Active
          type: boolean
        org_type:
          $ref: '#/components/schemas/OrganizationTypeChoices'
        name:
          title: Name
          type: string
        description:
          default: ''
          title: Description
          type: string
        metadata:
          default: {}
          title: Metadata
          type: object
        level_cache:
          default: 0
          title: Level Cache
          type: integer
        system_generated:
          title: System Generated
          type: boolean
        has_children:
          title: Has Children
          type: boolean
        parent:
          title: Parent
          type: object
      required:
      - org_type
      - name
      - system_generated
      - has_children
      - parent
      title: OrganizationReadSpec
      type: object
    OrganizationTypeChoices:
      enum:
      - team
      - govt
      - role
      title: OrganizationTypeChoices
      type: string
    OrganizationUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          title: Id
          type: string
        active:
          default: true
          title: Active
          type: boolean
        org_type:
          $ref: '#/components/schemas/OrganizationTypeChoices'
        name:
          title: Name
          type: string
        description:
          default: ''
          title: Description
          type: string
        metadata:
          default: {}
          title: Metadata
          type: object
      required:
      - org_type
      - name
      title: OrganizationUpdateSpec
      type: object
    OrganizationUserReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          format: uuid4
          title: Id
          type: string
        user:
          title: User
          type: object
        role:
          title: Role
          type: object
      required:
      - id
      - user
      - role
      title: OrganizationUserReadSpec
      type: object
    OrganizationUserUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        role:
          format: uuid4
          title: Role
          type: string
      required:
      - role
      title: OrganizationUserUpdateSpec
      type: object
    OrganizationUserWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        role:
          format: uuid4
          title: Role
          type: string
        user:
          format: uuid4
          title: User
          type: string
      required:
      - role
      - user
      title: OrganizationUserWriteSpec
      type: object
    OrganizationWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          title: Id
          type: string
        active:
          default: true
          title: Active
          type: boolean
        org_type:
          $ref: '#/components/schemas/OrganizationTypeChoices'
        name:
          title: Name
          type: string
        description:
          default: ''
          title: Description
          type: string
        metadata:
          default: {}
          title: Metadata
          type: object
        parent:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Parent
      required:
      - org_type
      - name
      title: OrganizationWriteSpec
      type: object
    PaginatedAllergyIntoleranceReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AllergyIntoleranceReadSpec'
    PaginatedAvailabilityExceptionReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/AvailabilityExceptionReadSpec'
    PaginatedConditionReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConditionReadSpec'
    PaginatedConsentListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ConsentListSpec'
    PaginatedDeviceEncounterHistoryListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceEncounterHistoryListSpec'
    PaginatedDeviceListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceListSpec'
    PaginatedDeviceLocationHistoryListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceLocationHistoryListSpec'
    PaginatedDeviceServiceHistoryListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/DeviceServiceHistoryListSpec'
    PaginatedEncounterListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/EncounterListSpec'
    PaginatedFacilityLocationEncounterReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacilityLocationEncounterReadSpec'
    PaginatedFacilityLocationListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacilityLocationListSpec'
    PaginatedFacilityOrganizationReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacilityOrganizationReadSpec'
    PaginatedFacilityOrganizationUserReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacilityOrganizationUserReadSpec'
    PaginatedFacilityReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FacilityReadSpec'
    PaginatedFileUploadListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/FileUploadListSpec'
    PaginatedMedicationAdministrationReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicationAdministrationReadSpec'
    PaginatedMedicationRequestReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicationRequestReadSpec'
    PaginatedMedicationStatementReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MedicationStatementReadSpec'
    PaginatedMetaArtifactReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/MetaArtifactReadSpec'
    PaginatedNoteMessageReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NoteMessageReadSpec'
    PaginatedNoteThreadUpdateSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/NoteThreadUpdateSpec'
    PaginatedObservationReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ObservationReadSpec'
    PaginatedOrganizationReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationReadSpec'
    PaginatedOrganizationUserReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/OrganizationUserReadSpec'
    PaginatedPatientListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PatientListSpec'
    PaginatedPatientOTPReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PatientOTPReadSpec'
    PaginatedPermissionSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PermissionSpec'
    PaginatedPublicUserReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/PublicUserReadSpec'
    PaginatedQuestionnaireReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionnaireReadSpec'
    PaginatedQuestionnaireResponseReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionnaireResponseReadSpec'
    PaginatedQuestionnaireTagSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/QuestionnaireTagSpec'
    PaginatedResourceRequestCommentListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRequestCommentListSpec'
    PaginatedResourceRequestListSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ResourceRequestListSpec'
    PaginatedRoleReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/RoleReadSpec'
    PaginatedScheduleReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ScheduleReadSpec'
    PaginatedTokenBookingReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/TokenBookingReadSpec'
    PaginatedUserSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/UserSpec'
    PaginatedValueSetReadSpecList:
      type: object
      required:
      - count
      - results
      properties:
        count:
          type: integer
          example: 123
        next:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=400&limit=100
        previous:
          type: string
          nullable: true
          format: uri
          example: http://api.example.org/accounts/?offset=200&limit=100
        results:
          type: array
          items:
            $ref: '#/components/schemas/ValueSetReadSpec'
    PasswordVerifyRequest:
      properties:
        password:
          title: Password
          type: string
      required:
      - password
      title: PasswordVerifyRequest
      type: object
    PatientCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          maxLength: 200
          title: Name
          type: string
        gender:
          $ref: '#/components/schemas/GenderChoices'
        phone_number:
          format: phone
          title: Phone Number
          type: string
        emergency_phone_number:
          anyOf:
          - format: phone
            maxLength: 14
            type: string
          - type: 'null'
          default: null
          title: Emergency Phone Number
        address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Address
        permanent_address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Permanent Address
        pincode:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Pincode
        deceased_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Deceased Datetime
        blood_group:
          anyOf:
          - $ref: '#/components/schemas/BloodGroupChoices'
          - type: 'null'
          default: null
        geo_organization:
          format: uuid4
          title: Geo Organization
          type: string
        date_of_birth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          title: Date Of Birth
        age:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Age
      required:
      - name
      - gender
      - phone_number
      - geo_organization
      title: PatientCreateSpec
      type: object
    PatientListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          maxLength: 200
          title: Name
          type: string
        gender:
          $ref: '#/components/schemas/GenderChoices'
        phone_number:
          format: phone
          title: Phone Number
          type: string
        emergency_phone_number:
          anyOf:
          - format: phone
            maxLength: 14
            type: string
          - type: 'null'
          default: null
          title: Emergency Phone Number
        address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Address
        permanent_address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Permanent Address
        pincode:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Pincode
        deceased_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Deceased Datetime
        blood_group:
          anyOf:
          - $ref: '#/components/schemas/BloodGroupChoices'
          - type: 'null'
          default: null
        date_of_birth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          title: Date Of Birth
        year_of_birth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          title: Year Of Birth
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
      required:
      - name
      - gender
      - phone_number
      - created_date
      - modified_date
      title: PatientListSpec
      type: object
    PatientOTPReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        name:
          title: Name
          type: string
        gender:
          title: Gender
          type: string
        phone_number:
          title: Phone Number
          type: string
        emergency_phone_number:
          title: Emergency Phone Number
          type: string
        address:
          title: Address
          type: string
        pincode:
          title: Pincode
          type: integer
        date_of_birth:
          format: date
          title: Date Of Birth
          type: string
        year_of_birth:
          title: Year Of Birth
          type: integer
        geo_organization:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Geo Organization
        blood_group:
          anyOf:
          - $ref: '#/components/schemas/BloodGroupChoices'
          - type: 'null'
          default: null
      required:
      - name
      - gender
      - phone_number
      - emergency_phone_number
      - address
      - pincode
      - date_of_birth
      - year_of_birth
      title: PatientOTPReadSpec
      type: object
    PatientOTPWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        name:
          title: Name
          type: string
        gender:
          $ref: '#/components/schemas/GenderChoices'
        date_of_birth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          title: Date Of Birth
        age:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Age
        address:
          title: Address
          type: string
        pincode:
          title: Pincode
          type: integer
        geo_organization:
          format: uuid4
          title: Geo Organization
          type: string
        blood_group:
          anyOf:
          - $ref: '#/components/schemas/BloodGroupChoices'
          - type: 'null'
          default: null
      required:
      - name
      - gender
      - address
      - pincode
      - geo_organization
      title: PatientOTPWriteSpec
      type: object
    PatientRetrieveSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        permissions:
          default: []
          items:
            type: string
          title: Permissions
          type: array
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          maxLength: 200
          title: Name
          type: string
        gender:
          $ref: '#/components/schemas/GenderChoices'
        phone_number:
          format: phone
          title: Phone Number
          type: string
        emergency_phone_number:
          anyOf:
          - format: phone
            maxLength: 14
            type: string
          - type: 'null'
          default: null
          title: Emergency Phone Number
        address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Address
        permanent_address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Permanent Address
        pincode:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Pincode
        deceased_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Deceased Datetime
        blood_group:
          anyOf:
          - $ref: '#/components/schemas/BloodGroupChoices'
          - type: 'null'
          default: null
        date_of_birth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          title: Date Of Birth
        year_of_birth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          title: Year Of Birth
        created_date:
          format: date-time
          title: Created Date
          type: string
        modified_date:
          format: date-time
          title: Modified Date
          type: string
        geo_organization:
          default: {}
          title: Geo Organization
          type: object
        created_by:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Created By
        updated_by:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Updated By
      required:
      - name
      - gender
      - phone_number
      - created_date
      - modified_date
      title: PatientRetrieveSpec
      type: object
    PatientUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          anyOf:
          - maxLength: 200
            type: string
          - type: 'null'
          default: null
          title: Name
        gender:
          anyOf:
          - $ref: '#/components/schemas/GenderChoices'
          - type: 'null'
          default: null
        phone_number:
          anyOf:
          - format: phone
            maxLength: 14
            type: string
          - type: 'null'
          default: null
          title: Phone Number
        emergency_phone_number:
          anyOf:
          - format: phone
            maxLength: 14
            type: string
          - type: 'null'
          default: null
          title: Emergency Phone Number
        address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Address
        permanent_address:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Permanent Address
        pincode:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Pincode
        deceased_datetime:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Deceased Datetime
        blood_group:
          anyOf:
          - $ref: '#/components/schemas/BloodGroupChoices'
          - type: 'null'
          default: null
        date_of_birth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          title: Date Of Birth
        age:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Age
        geo_organization:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Geo Organization
      title: PatientUpdateSpec
      type: object
    PatientUserCreateSpec:
      properties:
        user:
          format: uuid4
          title: User
          type: string
        role:
          format: uuid4
          title: Role
          type: string
      required:
      - user
      - role
      title: PatientUserCreateSpec
      type: object
    PatientUserDeleteSpec:
      properties:
        user:
          format: uuid4
          title: User
          type: string
      required:
      - user
      title: PatientUserDeleteSpec
      type: object
    Performer:
      properties:
        type:
          $ref: '#/components/schemas/PerformerType'
        id:
          title: Id
          type: string
      required:
      - type
      - id
      title: Performer
      type: object
    PerformerType:
      enum:
      - related_person
      - user
      title: PerformerType
      type: string
    PeriodSpec:
      properties:
        start:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Start
        end:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: End
      title: PeriodSpec
      type: object
    PermissionEnum:
      enum:
      - can_create_facility
      - can_read_facility
      - can_update_facility
      - can_write_questionnaire
      - can_archive_questionnaire
      - can_read_questionnaire
      - can_submit_questionnaire
      - can_manage_questionnaire
      - can_view_organization
      - can_create_organization
      - can_delete_organization
      - can_manage_organization
      - can_manage_organization_users
      - can_list_organization_users
      - can_create_facility_organization
      - can_create_facility_organization_root
      - can_view_facility_organization
      - can_delete_facility_organization
      - can_manage_facility_organization
      - can_list_facility_organization_users
      - can_manage_facility_organization_users
      - can_create_encounter
      - can_list_encounter
      - can_write_encounter
      - can_read_encounter
      - can_submit_encounter_questionnaire
      - can_create_patient
      - can_write_patient
      - can_list_patients
      - can_view_clinical_data
      - can_view_questionnaire_responses
      - can_submit_patient_questionnaire
      - can_create_user
      - can_list_user
      - can_write_user_schedule
      - can_list_user_schedule
      - can_list_user_booking
      - can_write_user_booking
      - can_create_appointment
      - can_reschedule_appointment
      - can_list_facility_locations
      - can_write_facility_locations
      - can_list_facility_location_organizations
      - can_create_facility_location_organizations
      - can_list_devices
      - can_manage_device_associations_to_encounters
      - can_manage_devices
      title: PermissionEnum
      type: string
    PermissionSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        slug:
          title: Slug
          type: string
        context:
          title: Context
          type: string
      required:
      - name
      - description
      - slug
      - context
      title: PermissionSpec
      type: object
    PublicUserReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        phone_number:
          maxLength: 14
          title: Phone Number
          type: string
        prefix:
          anyOf:
          - maxLength: 10
            type: string
          - type: 'null'
          default: null
          title: Prefix
        suffix:
          anyOf:
          - maxLength: 50
            type: string
          - type: 'null'
          default: null
          title: Suffix
        last_login:
          title: Last Login
          type: string
        profile_picture_url:
          title: Profile Picture Url
          type: string
        user_type:
          title: User Type
          type: string
        gender:
          title: Gender
          type: string
        username:
          title: Username
          type: string
      required:
      - first_name
      - last_name
      - phone_number
      - last_login
      - profile_picture_url
      - user_type
      - gender
      - username
      title: PublicUserReadSpec
      type: object
    Quantity:
      additionalProperties: false
      properties:
        value:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          description: The value of the measured amount. The value includes an implicit
            precision in the presentation of the value.
          title: Value
        unit:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
          description: A human-readable form of the unit.
        meta:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Meta
        code:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
          description: A computer processable form of the unit in some unit representation
            system.
      title: Quantity
      type: object
    Question:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        link_id:
          description: Unique human readable ID for linking
          title: Link Id
          type: string
        id:
          anyOf:
          - format: uuid4
            type: string
          - format: uuid5
            type: string
          description: Unique machine provided UUID
          title: Id
        code:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        collect_time:
          default: false
          description: Whether to collect timestamp
          title: Collect Time
          type: boolean
        collect_performer:
          default: false
          description: Whether to collect performer
          title: Collect Performer
          type: boolean
        text:
          description: Question text
          title: Text
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          description: Question description
          title: Description
        type:
          $ref: '#/components/schemas/QuestionType'
        structured_type:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Structured Type
        enable_when:
          anyOf:
          - items:
              $ref: '#/components/schemas/EnableWhen'
            type: array
          - type: 'null'
          default: null
          title: Enable When
        enable_behavior:
          anyOf:
          - $ref: '#/components/schemas/EnableBehavior'
          - type: 'null'
          default: null
        disabled_display:
          anyOf:
          - $ref: '#/components/schemas/DisabledDisplay'
          - type: 'null'
          default: null
        collect_body_site:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Collect Body Site
        collect_method:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Collect Method
        required:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Required
        repeats:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Repeats
        read_only:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Read Only
        max_length:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Max Length
        answerConstraint:
          anyOf:
          - $ref: '#/components/schemas/AnswerConstraint'
          - type: 'null'
          default: null
        answer_option:
          anyOf:
          - items:
              $ref: '#/components/schemas/AnswerOption'
            type: array
          - type: 'null'
          default: null
          title: Answer Option
        answer_value_set:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Answer Value Set
        is_observation:
          anyOf:
          - type: boolean
          - type: 'null'
          default: null
          title: Is Observation
        unit:
          anyOf:
          - $ref: '#/components/schemas/BoundCoding'
          - type: 'null'
          default: null
        questions:
          default: []
          items:
            $ref: '#/components/schemas/Question'
          title: Questions
          type: array
        formula:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Formula
        styling_metadata:
          default: {}
          title: Styling Metadata
          type: object
        is_component:
          default: false
          title: Is Component
          type: boolean
      required:
      - link_id
      - text
      - type
      title: Question
      type: object
    QuestionType:
      enum:
      - group
      - boolean
      - decimal
      - integer
      - string
      - text
      - display
      - date
      - dateTime
      - time
      - choice
      - url
      - quantity
      - structured
      title: QuestionType
      type: string
    QuestionnaireOrganizationUpdateSchema:
      properties:
        organizations:
          items:
            format: uuid4
            type: string
          title: Organizations
          type: array
      required:
      - organizations
      title: QuestionnaireOrganizationUpdateSchema
      type: object
    QuestionnaireReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          title: Id
          type: string
        slug:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Slug
        version:
          title: Version
          type: string
        title:
          title: Title
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        status:
          $ref: '#/components/schemas/QuestionnaireStatus'
        subject_type:
          $ref: '#/components/schemas/SubjectType'
        styling_metadata:
          title: Styling Metadata
          type: object
        questions:
          items: {}
          title: Questions
          type: array
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        tags:
          default: []
          items:
            type: object
          title: Tags
          type: array
      required:
      - id
      - version
      - title
      - status
      - subject_type
      - styling_metadata
      - questions
      title: QuestionnaireReadSpec
      type: object
    QuestionnaireResponseReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          format: uuid4
          title: Id
          type: string
        questionnaire:
          $ref: '#/components/schemas/QuestionnaireReadSpec'
        subject_id:
          title: Subject Id
          type: string
        responses:
          items: {}
          title: Responses
          type: array
        encounter:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Encounter
        structured_responses:
          title: Structured Responses
          type: object
        structured_response_type:
          title: Structured Response Type
          type: string
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
        created_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Created Date
        modified_date:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Modified Date
      required:
      - id
      - questionnaire
      - subject_id
      - responses
      - structured_responses
      - structured_response_type
      title: QuestionnaireResponseReadSpec
      type: object
    QuestionnaireSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        version:
          default: '1.0'
          description: Version of the questionnaire
          title: Version
          type: string
        slug:
          anyOf:
          - maxLength: 25
            minLength: 5
            pattern: ^[-\w]+$
            type: string
          - type: 'null'
          default: null
          title: Slug
        title:
          title: Title
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        type:
          default: custom
          title: Type
          type: string
        status:
          $ref: '#/components/schemas/QuestionnaireStatus'
        subject_type:
          $ref: '#/components/schemas/SubjectType'
        styling_metadata:
          default: {}
          description: Styling requirements without validation
          title: Styling Metadata
          type: object
        questions:
          items:
            $ref: '#/components/schemas/Question'
          title: Questions
          type: array
        organizations:
          items:
            format: uuid4
            type: string
          minItems: 1
          title: Organizations
          type: array
        tags:
          default: []
          items:
            format: uuid4
            type: string
          title: Tags
          type: array
      required:
      - title
      - status
      - subject_type
      - questions
      - organizations
      title: QuestionnaireSpec
      type: object
    QuestionnaireStatus:
      enum:
      - active
      - retired
      - draft
      title: QuestionnaireStatus
      type: string
    QuestionnaireSubmitRequest:
      properties:
        resource_id:
          format: uuid4
          title: Resource Id
          type: string
        encounter:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Encounter
        patient:
          format: uuid4
          title: Patient
          type: string
        results:
          items:
            $ref: '#/components/schemas/QuestionnaireSubmitResult'
          title: Results
          type: array
      required:
      - resource_id
      - patient
      - results
      title: QuestionnaireSubmitRequest
      type: object
    QuestionnaireSubmitResult:
      properties:
        question_id:
          anyOf:
          - format: uuid4
            type: string
          - format: uuid5
            type: string
          title: Question Id
        body_site:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
        method:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
        taken_at:
          anyOf:
          - format: date-time
            type: string
          - type: 'null'
          default: null
          title: Taken At
        values:
          default: []
          items:
            $ref: '#/components/schemas/QuestionnaireSubmitResultValue'
          title: Values
          type: array
        note:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Note
        sub_results:
          default: []
          items:
            items:
              $ref: '#/components/schemas/QuestionnaireSubmitResult'
            type: array
          title: Sub Results
          type: array
      required:
      - question_id
      title: QuestionnaireSubmitResult
      type: object
    QuestionnaireSubmitResultValue:
      properties:
        value:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Value
        unit:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
        coding:
          anyOf:
          - $ref: '#/components/schemas/Coding'
          - type: 'null'
          default: null
      title: QuestionnaireSubmitResultValue
      type: object
    QuestionnaireTagSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        slug:
          title: Slug
          type: string
      required:
      - name
      - slug
      title: QuestionnaireTagSpec
      type: object
    QuestionnaireTagsSetSchema:
      properties:
        tags:
          items:
            type: string
          title: Tags
          type: array
      required:
      - tags
      title: QuestionnaireTagsSetSchema
      type: object
    QuestionnaireUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        version:
          default: '1.0'
          description: Version of the questionnaire
          title: Version
          type: string
        slug:
          anyOf:
          - maxLength: 25
            minLength: 5
            pattern: ^[-\w]+$
            type: string
          - type: 'null'
          default: null
          title: Slug
        title:
          title: Title
          type: string
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        type:
          default: custom
          title: Type
          type: string
        status:
          $ref: '#/components/schemas/QuestionnaireStatus'
        subject_type:
          $ref: '#/components/schemas/SubjectType'
        styling_metadata:
          default: {}
          description: Styling requirements without validation
          title: Styling Metadata
          type: object
        questions:
          items:
            $ref: '#/components/schemas/Question'
          title: Questions
          type: array
      required:
      - title
      - status
      - subject_type
      - questions
      title: QuestionnaireUpdateSpec
      type: object
    ReferenceRange:
      properties:
        low:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          title: Low
        high:
          anyOf:
          - type: number
          - type: 'null'
          default: null
          title: High
        unit:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Unit
        text:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Text
      title: ReferenceRange
      type: object
    Request:
      properties:
        url:
          title: Url
          type: string
        method:
          title: Method
          type: string
        body:
          default: {}
          title: Body
          type: object
        reference_id:
          title: Reference Id
          type: string
      required:
      - url
      - method
      - reference_id
      title: Request
      type: object
    ResourceRequestCommentCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        comment:
          title: Comment
          type: string
      required:
      - comment
      title: ResourceRequestCommentCreateSpec
      type: object
    ResourceRequestCommentListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        comment:
          title: Comment
          type: string
        created_by:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Created By
        created_date:
          format: date-time
          title: Created Date
          type: string
      required:
      - comment
      - created_date
      title: ResourceRequestCommentListSpec
      type: object
    ResourceRequestCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        emergency:
          title: Emergency
          type: boolean
        title:
          title: Title
          type: string
        reason:
          title: Reason
          type: string
        referring_facility_contact_name:
          title: Referring Facility Contact Name
          type: string
        referring_facility_contact_number:
          title: Referring Facility Contact Number
          type: string
        status:
          title: Status
          type: string
        category:
          title: Category
          type: string
        priority:
          title: Priority
          type: integer
        origin_facility:
          format: uuid4
          title: Origin Facility
          type: string
        approving_facility:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Approving Facility
        assigned_facility:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Assigned Facility
        related_patient:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Related Patient
        assigned_to:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Assigned To
      required:
      - emergency
      - title
      - reason
      - referring_facility_contact_name
      - referring_facility_contact_number
      - status
      - category
      - priority
      - origin_facility
      title: ResourceRequestCreateSpec
      type: object
    ResourceRequestListSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        emergency:
          title: Emergency
          type: boolean
        title:
          title: Title
          type: string
        reason:
          title: Reason
          type: string
        referring_facility_contact_name:
          title: Referring Facility Contact Name
          type: string
        referring_facility_contact_number:
          title: Referring Facility Contact Number
          type: string
        status:
          title: Status
          type: string
        category:
          title: Category
          type: string
        priority:
          title: Priority
          type: integer
        origin_facility:
          title: Origin Facility
          type: object
        assigned_facility:
          anyOf:
          - type: object
          - type: 'null'
          default: null
          title: Assigned Facility
      required:
      - emergency
      - title
      - reason
      - referring_facility_contact_name
      - referring_facility_contact_number
      - status
      - category
      - priority
      - origin_facility
      title: ResourceRequestListSpec
      type: object
    RoleCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        is_system:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Is System
        permissions:
          anyOf:
          - items:
              $ref: '#/components/schemas/PermissionEnum'
            type: array
          - type: 'null'
          default: []
          title: Permissions
      title: RoleCreateSpec
      type: object
    RoleReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Name
        description:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Description
        is_system:
          anyOf:
          - type: boolean
          - type: 'null'
          default: false
          title: Is System
        permissions:
          items:
            $ref: '#/components/schemas/PermissionSpec'
          title: Permissions
          type: array
      required:
      - permissions
      title: RoleReadSpec
      type: object
    ScheduleCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        user:
          format: uuid4
          title: User
          type: string
        facility:
          format: uuid4
          title: Facility
          type: string
        name:
          title: Name
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_to:
          format: date-time
          title: Valid To
          type: string
        availabilities:
          items:
            $ref: '#/components/schemas/AvailabilityForScheduleSpec'
          title: Availabilities
          type: array
      required:
      - user
      - facility
      - name
      - valid_from
      - valid_to
      - availabilities
      title: ScheduleCreateSpec
      type: object
    ScheduleReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_to:
          format: date-time
          title: Valid To
          type: string
        availabilities:
          default: []
          items: {}
          title: Availabilities
          type: array
        created_by:
          $ref: '#/components/schemas/UserSpec'
          default: {}
        updated_by:
          $ref: '#/components/schemas/UserSpec'
          default: {}
      required:
      - name
      - valid_from
      - valid_to
      title: ScheduleReadSpec
      type: object
    ScheduleUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        name:
          title: Name
          type: string
        valid_from:
          format: date-time
          title: Valid From
          type: string
        valid_to:
          format: date-time
          title: Valid To
          type: string
      required:
      - name
      - valid_from
      - valid_to
      title: ScheduleUpdateSpec
      type: object
    SearchRequestSpec:
      properties:
        name:
          default: ''
          title: Name
          type: string
        phone_number:
          title: Phone Number
          type: string
        date_of_birth:
          anyOf:
          - format: date
            type: string
          - type: 'null'
          default: null
          title: Date Of Birth
        year_of_birth:
          anyOf:
          - type: integer
          - type: 'null'
          default: null
          title: Year Of Birth
      required:
      - phone_number
      title: SearchRequestSpec
      type: object
    SearchRetrieveRequestSpec:
      properties:
        phone_number:
          title: Phone Number
          type: string
        year_of_birth:
          title: Year Of Birth
          type: integer
        partial_id:
          title: Partial Id
          type: string
      required:
      - phone_number
      - year_of_birth
      - partial_id
      title: SearchRetrieveRequestSpec
      type: object
    SeverityChoices:
      enum:
      - mild
      - moderate
      - severe
      title: SeverityChoices
      type: string
    SlotTypeOptions:
      enum:
      - open
      - appointment
      - closed
      title: SlotTypeOptions
      type: string
    SlotsForDayRequestSpec:
      properties:
        user:
          format: uuid4
          title: User
          type: string
        day:
          format: date
          title: Day
          type: string
        facility:
          format: uuid4
          title: Facility
          type: string
      required:
      - user
      - day
      - facility
      title: SlotsForDayRequestSpec
      type: object
    StatusChoices:
      enum:
      - planned
      - in_progress
      - on_hold
      - discharged
      - completed
      - cancelled
      - discontinued
      - entered_in_error
      - unknown
      title: StatusChoices
      type: string
    StatusReason:
      enum:
      - altchoice
      - clarif
      - drughigh
      - hospadm
      - labint
      - non_avail
      - preg
      - salg
      - sddi
      - sdupther
      - sintol
      - surg
      - washout
      title: StatusReason
      type: string
    SubjectType:
      enum:
      - patient
      - encounter
      title: SubjectType
      type: string
    TOTPSetupResponse:
      properties:
        uri:
          title: Uri
          type: string
        secret_key:
          title: Secret Key
          type: string
      required:
      - uri
      - secret_key
      title: TOTPSetupResponse
      type: object
    TOTPVerifyRequest:
      properties:
        code:
          title: Code
          type: string
      required:
      - code
      title: TOTPVerifyRequest
      type: object
    TOTPVerifyResponse:
      properties:
        backup_codes:
          items:
            type: string
          title: Backup Codes
          type: array
      required:
      - backup_codes
      title: TOTPVerifyResponse
      type: object
    Timing:
      properties:
        repeat:
          $ref: '#/components/schemas/TimingRepeat'
        code:
          $ref: '#/components/schemas/Coding'
      required:
      - repeat
      - code
      title: Timing
      type: object
    TimingQuantity:
      properties:
        value:
          title: Value
          type: number
        unit:
          $ref: '#/components/schemas/TimingUnit'
      required:
      - value
      - unit
      title: TimingQuantity
      type: object
    TimingRepeat:
      properties:
        frequency:
          title: Frequency
          type: integer
        period:
          title: Period
          type: number
        period_unit:
          $ref: '#/components/schemas/TimingUnit'
        bounds_duration:
          $ref: '#/components/schemas/TimingQuantity'
      required:
      - frequency
      - period
      - period_unit
      - bounds_duration
      title: TimingRepeat
      type: object
    TimingUnit:
      enum:
      - s
      - min
      - h
      - d
      - wk
      - mo
      - a
      title: TimingUnit
      type: string
    TokenBookingReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        token_slot:
          $ref: '#/components/schemas/TokenSlotBaseSpec'
        patient:
          $ref: '#/components/schemas/PatientOTPReadSpec'
        booked_on:
          format: date-time
          title: Booked On
          type: string
        booked_by:
          $ref: '#/components/schemas/UserSpec'
        status:
          title: Status
          type: string
        reason_for_visit:
          title: Reason For Visit
          type: string
        user:
          default: {}
          title: User
          type: object
        facility:
          default: {}
          title: Facility
          type: object
      required:
      - token_slot
      - patient
      - booked_on
      - booked_by
      - status
      - reason_for_visit
      title: TokenBookingReadSpec
      type: object
    TokenBookingWriteSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        status:
          $ref: '#/components/schemas/BookingStatusChoices'
      required:
      - status
      title: TokenBookingWriteSpec
      type: object
    TokenSlotBaseSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        availability:
          format: uuid4
          title: Availability
          type: string
        start_datetime:
          format: date-time
          title: Start Datetime
          type: string
        end_datetime:
          format: date-time
          title: End Datetime
          type: string
        allocated:
          title: Allocated
          type: integer
      required:
      - availability
      - start_datetime
      - end_datetime
      - allocated
      title: TokenSlotBaseSpec
      type: object
    UserCreateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        phone_number:
          maxLength: 14
          title: Phone Number
          type: string
        prefix:
          anyOf:
          - maxLength: 10
            type: string
          - type: 'null'
          default: null
          title: Prefix
        suffix:
          anyOf:
          - maxLength: 50
            type: string
          - type: 'null'
          default: null
          title: Suffix
        user_type:
          $ref: '#/components/schemas/UserTypeOptions'
        gender:
          $ref: '#/components/schemas/GenderChoices'
        geo_organization:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Geo Organization
        password:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Password
        username:
          title: Username
          type: string
        email:
          title: Email
          type: string
      required:
      - first_name
      - last_name
      - phone_number
      - user_type
      - gender
      - username
      - email
      title: UserCreateSpec
      type: object
    UserSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        phone_number:
          maxLength: 14
          title: Phone Number
          type: string
        prefix:
          anyOf:
          - maxLength: 10
            type: string
          - type: 'null'
          default: null
          title: Prefix
        suffix:
          anyOf:
          - maxLength: 50
            type: string
          - type: 'null'
          default: null
          title: Suffix
        last_login:
          title: Last Login
          type: string
        profile_picture_url:
          title: Profile Picture Url
          type: string
        user_type:
          title: User Type
          type: string
        gender:
          title: Gender
          type: string
        username:
          title: Username
          type: string
        mfa_enabled:
          default: false
          title: Mfa Enabled
          type: boolean
        deleted:
          default: false
          title: Deleted
          type: boolean
      required:
      - first_name
      - last_name
      - phone_number
      - last_login
      - profile_picture_url
      - user_type
      - gender
      - username
      title: UserSpec
      type: object
    UserTypeOptions:
      enum:
      - doctor
      - nurse
      - staff
      - volunteer
      - administrator
      title: UserTypeOptions
      type: string
    UserUpdateSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Id
        first_name:
          title: First Name
          type: string
        last_name:
          title: Last Name
          type: string
        phone_number:
          maxLength: 14
          title: Phone Number
          type: string
        prefix:
          anyOf:
          - maxLength: 10
            type: string
          - type: 'null'
          default: null
          title: Prefix
        suffix:
          anyOf:
          - maxLength: 50
            type: string
          - type: 'null'
          default: null
          title: Suffix
        user_type:
          $ref: '#/components/schemas/UserTypeOptions'
        gender:
          $ref: '#/components/schemas/GenderChoices'
        geo_organization:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Geo Organization
      required:
      - first_name
      - last_name
      - phone_number
      - user_type
      - gender
      title: UserUpdateSpec
      type: object
    ValueSetCompose:
      additionalProperties: false
      properties:
        id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Id
        include:
          items:
            $ref: '#/components/schemas/ValueSetInclude'
          title: Include
          type: array
        exclude:
          anyOf:
          - items:
              $ref: '#/components/schemas/ValueSetInclude'
            type: array
          - type: 'null'
          default: null
          title: Exclude
        property:
          anyOf:
          - items:
              type: string
            type: array
          - type: 'null'
          default: null
          title: Property
      required:
      - include
      title: ValueSetCompose
      type: object
    ValueSetConcept:
      additionalProperties: false
      properties:
        id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Id
        code:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Code
        display:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Display
      title: ValueSetConcept
      type: object
    ValueSetFilter:
      additionalProperties: false
      properties:
        id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Id
        property:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Property
        op:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Op
        value:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Value
      title: ValueSetFilter
      type: object
    ValueSetInclude:
      additionalProperties: false
      properties:
        id:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Id
        system:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: System
        version:
          anyOf:
          - type: string
          - type: 'null'
          default: null
          title: Version
        concept:
          anyOf:
          - items:
              $ref: '#/components/schemas/ValueSetConcept'
            type: array
          - type: 'null'
          default: null
          title: Concept
        filter:
          anyOf:
          - items:
              $ref: '#/components/schemas/ValueSetFilter'
            type: array
          - type: 'null'
          default: null
          title: Filter
      title: ValueSetInclude
      type: object
    ValueSetReadSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        slug:
          anyOf:
          - maxLength: 25
            minLength: 5
            pattern: ^[-\w]+$
            type: string
          - type: 'null'
          default: null
          title: Slug
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        compose:
          $ref: '#/components/schemas/ValueSetCompose'
        status:
          $ref: '#/components/schemas/ValueSetStatusOptions'
        is_system_defined:
          default: false
          title: Is System Defined
          type: boolean
        created_by:
          $ref: '#/components/schemas/UserSpec'
        updated_by:
          $ref: '#/components/schemas/UserSpec'
      required:
      - name
      - description
      - compose
      - status
      title: ValueSetReadSpec
      type: object
    ValueSetSpec:
      properties:
        meta:
          default: {}
          title: Meta
          type: object
        id:
          default: null
          format: uuid4
          title: Id
          type: string
        slug:
          anyOf:
          - maxLength: 25
            minLength: 5
            pattern: ^[-\w]+$
            type: string
          - type: 'null'
          default: null
          title: Slug
        name:
          title: Name
          type: string
        description:
          title: Description
          type: string
        compose:
          $ref: '#/components/schemas/ValueSetCompose'
        status:
          $ref: '#/components/schemas/ValueSetStatusOptions'
        is_system_defined:
          default: false
          title: Is System Defined
          type: boolean
      required:
      - name
      - description
      - compose
      - status
      title: ValueSetSpec
      type: object
    ValueSetStatusOptions:
      enum:
      - draft
      - active
      - retired
      - unknown
      title: ValueSetStatusOptions
      type: string
    VerificationRemovalSchema:
      properties:
        verified_by:
          anyOf:
          - format: uuid4
            type: string
          - type: 'null'
          default: null
          title: Verified By
      title: VerificationRemovalSchema
      type: object
    VerificationStatusChoices:
      enum:
      - unconfirmed
      - presumed
      - confirmed
      - refuted
      - entered_in_error
      title: VerificationStatusChoices
      type: string
    VerificationType:
      enum:
      - family
      - validation
      title: VerificationType
      type: string
  securitySchemes:
    basicAuth:
      type: http
      scheme: basic
      description: Do not use this scheme for production.
    cookieAuth:
      type: apiKey
      in: cookie
      name: sessionid
      scheme: http
      description: Do not use this scheme for production.
    jwtAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
